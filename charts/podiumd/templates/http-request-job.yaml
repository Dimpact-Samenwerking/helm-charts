{{- if and .Values.global.configuration.enabled .Values.opennotificaties.configuration.enabled .Values.opennotificaties.configuration.http_request_job.enabled -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: http-request-job
  labels:
    {{- include "podiumd.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "-5"
spec:
  backoffLimit: 0
  ttlSecondsAfterFinished: 3600
  template:
    metadata:
      labels:
        {{- include "podiumd.labels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ template "podiumd.serviceAccountName" . }}
      restartPolicy: Never
      containers:
        - name: intellij-http-client
          image: "{{ .Values.httpRequestJob.intellijHttpClient.image.repository }}:{{ .Values.httpRequestJob.intellijHttpClient.image.tag }}"
          args:
            - --log-level
            - VERBOSE
            - --env-file
            - /shared/http-client.env.json
            - --env
            - tmp
            - /http-request-files/kanalen.http
          volumeMounts:
            - name: shared-volume
              mountPath: /shared
            - name: http-request-files-volume
              mountPath: /http-request-files
      initContainers:
        - name: create-notificaties-jwt
          image: "{{ .Values.httpRequestJob.jwtCli.image.repository }}:{{ .Values.httpRequestJob.jwtCli.image.tag }}"
          args:
            - encode
            - --iss
            - {{ .Values.global.configuration.openzaakNotificatiesClientId }}
            - --secret
            - {{ .Values.global.configuration.openzaakNotificatiesSecret }}
            - --payload
            - client_id={{ .Values.global.configuration.openzaakNotificatiesClientId }}
            - --out
            - /shared/notificaties-jwt
          volumeMounts:
            - mountPath: /shared
              name: shared-volume
        - name: create-http-client-env-and-wait
          image: "{{ .Values.httpRequestJob.alpine.image.repository }}:{{ .Values.httpRequestJob.alpine.image.tag }}"
          command: ["/bin/sh", "-c"]
          args:
            - |
              apk add --no-cache jq > /dev/null && \
              NOTIFICATIES_JWT=$(cat /shared/notificaties-jwt) && \
              echo $(jq -n --arg notificatiesJwt "$NOTIFICATIES_JWT" \
              '{
                 "tmp": {
                   "notificatiesJwt": $notificatiesJwt,
                   "notificatiesApi" : "{{ printf "http://%s.%s.svc.cluster.local/api/v1/" .Values.opennotificaties.fullnameOverride .Release.Namespace }}"
                 }
              }' \
              ) > /shared/http-client.env.json && \
              jq . /shared/http-client.env.json && \
              echo "Wait for 3 minutes ..." && \
              sleep 180
          volumeMounts:
            - mountPath: /shared
              name: shared-volume
      volumes:
        - name: shared-volume
          emptyDir: {}
        - name: http-request-files-volume
          configMap:
            name: http-request-files-configmap
      {{- with .Values.httpRequestJob.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
