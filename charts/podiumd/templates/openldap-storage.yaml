{{- if and .Release.IsInstall (and .Values.tags.zaak (or .Values.openldap.enabled (not (hasKey .Values.openldap "enabled")))) -}}
{{- if not (lookup "v1" "PersistentVolumeClaim" .Release.Namespace .Values.openldap.persistence.existingClaim) -}}
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: {{ printf "%s-openldap" .Release.Namespace }}
  labels:
    {{- include "podiumd.labels" . | nindent 4 }}
  annotations:
    pv.kubernetes.io/provisioned-by: file.csi.azure.com
    helm.sh/resource-policy: keep
spec:
  capacity:
    storage: {{ .Values.openldap.persistence.size }}
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: podiumd-standard
  csi:
    driver: file.csi.azure.com
    volumeHandle: {{ printf "%s-openldap" .Release.Namespace }}
    volumeAttributes:
      {{- if .Values.persistentVolume.volumeAttributeResourceGroup }}
      resourceGroup: {{ .Values.persistentVolume.volumeAttributeResourceGroup }}
      {{- end }}
      {{- if .Values.persistentVolume.volumeAttributeShareName }}
      shareName: {{ .Values.persistentVolume.volumeAttributeShareName }}
      {{- else }}
      shareName: {{ .Values.openldap.persistentVolume.volumeAttributeShareName }}
      {{- end }}
    nodeStageSecretRef:
      name: {{ .Values.persistentVolume.nodeStageSecretRefName }}
      namespace: {{ .Values.persistentVolume.nodeStageSecretRefNamespace }}
  mountOptions:
    - dir_mode=0777
    - file_mode=0777
    - uid=1000
    - gid=1000
    - mfsymlinks
    - cache=strict
    - nosharesock
    - nobrl
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Values.openldap.persistence.existingClaim }}
  labels:
    {{- include "podiumd.labels" . | nindent 4 }}
  annotations:
    helm.sh/resource-policy: keep
spec:
  volumeName: {{ printf "%s-openldap" .Release.Namespace }}
  resources:
    requests:
      storage: {{ .Values.openldap.persistence.size }}
  accessModes:
    - ReadWriteMany
  storageClassName: podiumd-standard
{{- end }}
{{- end }}
