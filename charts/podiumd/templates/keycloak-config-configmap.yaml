{{- if .Values.keycloak.enabled -}}
{{- if .Values.keycloak.keycloakConfigCli.enabled -}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.keycloak.keycloakConfigCli.existingConfigmap }}
  labels:
    {{- include "podiumd.labels" . | nindent 4 }}
    app.kubernetes.io/component: keycloak-config-cli
data:
  master.yaml: |
    realm: master
    attributes:
      frontendUrl: {{ .Values.keycloak.config.adminFrontendUrl | quote }}
    browserSecurityHeaders:
      xContentTypeOptions: "nosniff"
      xRobotsTag: "none"
      xFrameOptions: "SAMEORIGIN"
      contentSecurityPolicy: "frame-src 'self'; frame-ancestors 'self'; object-src 'none';"
      xXSSProtection: "1; mode=block"
      strictTransportSecurity: ""
{{- if .Values.keycloak.config.adminOtpEnabled }}
    requiredActions:
      - name: "Configure OTP"
        providerId: CONFIGURE_TOTP
        enabled: "true"
        defaultAction: "true"
        alias: CONFIGURE_TOTP
{{- end }}
{{- with .Values.keycloak.config.adminIdentityProviders }}
    {{- toYaml . | nindent 4 }}
{{- end }}
{{- with .Values.keycloak.config.adminIdentityProviderMappers }}
    {{- toYaml . | nindent 4 }}
{{- end }}
  realm.yaml: |
    realm: {{ .Values.keycloak.config.realm }}
    enabled: true
    displayName: {{ .Values.keycloak.config.realmDisplayName }}
    loginWithEmailAllowed: true
    rememberMe: true
    attributes:
      frontendUrl: {{ .Values.keycloak.config.realmFrontendUrl }}
      adminEventsExpiration: 10800
    browserSecurityHeaders:
      xContentTypeOptions: "nosniff"
      xRobotsTag: "none"
      xFrameOptions: "SAMEORIGIN"
      contentSecurityPolicy: "frame-src 'self'; frame-ancestors 'self'; object-src 'none';"
      xXSSProtection: "1; mode=block"
      strictTransportSecurity: ""
    requiredActions:
      - name: "Configure OTP"
        providerId: CONFIGURE_TOTP
        enabled: "true"
        defaultAction: "true"
        alias: CONFIGURE_TOTP
    clients:
      - clientId: openzaak
        name: Open Zaak
        enabled: true
        clientAuthenticatorType: client-secret
        redirectUris:
          - "{{ .Values.openzaak.configuration.oidcUrl }}/*"
        webOrigins:
          - "{{ .Values.openzaak.configuration.oidcUrl }}/*"
        secret: {{ .Values.openzaak.configuration.oidcSecret | quote }}
        protocolMappers:
          - name: "username"
            protocol: "openid-connect"
            protocolMapper: oidc-usermodel-property-mapper
            config:
              introspection.token.claim: "true"
              userinfo.token.claim: "true"
              user.attribute: "username"
              id.token.claim: "true"
              lightweight.claim: "false"
              access.token.claim: "true"
              claim.name: "preferred_username"
              jsonType.label: "String"
          - name: "groups-member"
            protocol: "openid-connect"
            protocolMapper: "oidc-group-membership-mapper"
            consentRequired: false
            config:
              full.path: "false"
              introspection.token.claim: "true"
              userinfo.token.claim: "true"
              multivalued: "true"
              id.token.claim: "true"
              lightweight.claim: "false"
              access.token.claim: "true"
              claim.name: "groups"
      - clientId: abc
        name: Open Archiefbeheer
        enabled: true
        clientAuthenticatorType: client-secret
        redirectUris:
          - "{{ .Values.abc.configuration.oidcUrl }}/*"
        webOrigins:
          - "{{ .Values.abc.configuration.oidcUrl }}/*"
        secret: {{ .Values.abc.configuration.oidcSecret | quote }}
        protocolMappers:
          - name: "username"
            protocol: "openid-connect"
            protocolMapper: oidc-usermodel-property-mapper
            config:
              introspection.token.claim: "true"
              userinfo.token.claim: "true"
              user.attribute: "username"
              id.token.claim: "true"
              lightweight.claim: "false"
              access.token.claim: "true"
              claim.name: "preferred_username"
              jsonType.label: "String"
          - name: "groups-member"
            protocol: "openid-connect"
            protocolMapper: "oidc-group-membership-mapper"
            consentRequired: false
            config:
              full.path: "false"
              introspection.token.claim: "true"
              userinfo.token.claim: "true"
              multivalued: "true"
              id.token.claim: "true"
              lightweight.claim: "false"
              access.token.claim: "true"
              claim.name: "groups"
      - clientId: opennotificaties
        name: Open Notificaties
        enabled: true
        clientAuthenticatorType: client-secret
        redirectUris:
          - "{{ .Values.opennotificaties.configuration.oidcUrl }}/*"
        webOrigins:
          - "{{ .Values.opennotificaties.configuration.oidcUrl }}/*"
        secret: {{ .Values.opennotificaties.configuration.oidcSecret | quote }}
        protocolMappers:
          - name: "username"
            protocol: "openid-connect"
            protocolMapper: oidc-usermodel-property-mapper
            config:
              introspection.token.claim: "true"
              userinfo.token.claim: "true"
              user.attribute: "username"
              id.token.claim: "true"
              lightweight.claim: "false"
              access.token.claim: "true"
              claim.name: "preferred_username"
              jsonType.label: "String"
          - name: "groups-member"
            protocol: "openid-connect"
            protocolMapper: "oidc-group-membership-mapper"
            consentRequired: false
            config:
              full.path: "false"
              introspection.token.claim: "true"
              userinfo.token.claim: "true"
              multivalued: "true"
              id.token.claim: "true"
              lightweight.claim: "false"
              access.token.claim: "true"
              claim.name: "groups"
      - clientId: objecten
        name: Objecten
        enabled: true
        clientAuthenticatorType: client-secret
        redirectUris:
          - "{{ .Values.objecten.configuration.oidcUrl }}/*"
        webOrigins:
          - "{{ .Values.objecten.configuration.oidcUrl }}/*"
        secret: {{ .Values.objecten.configuration.oidcSecret | quote }}
        protocolMappers:
          - name: "username"
            protocol: "openid-connect"
            protocolMapper: oidc-usermodel-property-mapper
            config:
              introspection.token.claim: "true"
              userinfo.token.claim: "true"
              user.attribute: "username"
              id.token.claim: "true"
              lightweight.claim: "false"
              access.token.claim: "true"
              claim.name: "preferred_username"
              jsonType.label: "String"
          - name: "groups-member"
            protocol: "openid-connect"
            protocolMapper: "oidc-group-membership-mapper"
            consentRequired: false
            config:
              full.path: "false"
              introspection.token.claim: "true"
              userinfo.token.claim: "true"
              multivalued: "true"
              id.token.claim: "true"
              lightweight.claim: "false"
              access.token.claim: "true"
              claim.name: "groups"
      - clientId: objecttypen
        name: Objecttypen
        enabled: true
        clientAuthenticatorType: client-secret
        redirectUris:
          - "{{ .Values.objecttypen.configuration.oidcUrl }}/*"
        webOrigins:
          - "{{ .Values.objecttypen.configuration.oidcUrl }}/*"
        secret: {{ .Values.objecttypen.configuration.oidcSecret | quote }}
        protocolMappers:
          - name: "username"
            protocol: "openid-connect"
            protocolMapper: oidc-usermodel-property-mapper
            config:
              introspection.token.claim: "true"
              userinfo.token.claim: "true"
              user.attribute: "username"
              id.token.claim: "true"
              lightweight.claim: "false"
              access.token.claim: "true"
              claim.name: "preferred_username"
              jsonType.label: "String"
          - name: "groups-member"
            protocol: "openid-connect"
            protocolMapper: "oidc-group-membership-mapper"
            consentRequired: false
            config:
              full.path: "false"
              introspection.token.claim: "true"
              userinfo.token.claim: "true"
              multivalued: "true"
              id.token.claim: "true"
              lightweight.claim: "false"
              access.token.claim: "true"
              claim.name: "groups"
      - clientId: openklant
        name: Open Klant
        enabled: true
        clientAuthenticatorType: client-secret
        redirectUris:
          - "{{ .Values.openklant.configuration.oidcUrl }}/*"
        webOrigins:
          - "{{ .Values.openklant.configuration.oidcUrl }}/*"
        secret: {{ .Values.openklant.configuration.oidcSecret | quote }}
        protocolMappers:
          - name: "username"
            protocol: "openid-connect"
            protocolMapper: oidc-usermodel-property-mapper
            config:
              introspection.token.claim: "true"
              userinfo.token.claim: "true"
              user.attribute: "username"
              id.token.claim: "true"
              lightweight.claim: "false"
              access.token.claim: "true"
              claim.name: "preferred_username"
              jsonType.label: "String"
          - name: "groups-member"
            protocol: "openid-connect"
            protocolMapper: "oidc-group-membership-mapper"
            consentRequired: false
            config:
              full.path: "false"
              introspection.token.claim: "true"
              userinfo.token.claim: "true"
              multivalued: "true"
              id.token.claim: "true"
              lightweight.claim: "false"
              access.token.claim: "true"
              claim.name: "groups"
      - clientId: openformulieren
        name: Open Formulieren
        enabled: true
        clientAuthenticatorType: client-secret
        redirectUris:
          - "{{ .Values.openformulieren.configuration.oidcUrl }}/*"
        webOrigins:
          - "{{ .Values.openformulieren.configuration.oidcUrl }}/*"
        secret: {{ .Values.openformulieren.configuration.oidcSecret | quote }}
        protocolMappers:
          - name: "username"
            protocol: "openid-connect"
            protocolMapper: oidc-usermodel-property-mapper
            config:
              introspection.token.claim: "true"
              userinfo.token.claim: "true"
              user.attribute: "username"
              id.token.claim: "true"
              lightweight.claim: "false"
              access.token.claim: "true"
              claim.name: "preferred_username"
              jsonType.label: "String"
          - name: "groups-member"
            protocol: "openid-connect"
            protocolMapper: "oidc-group-membership-mapper"
            consentRequired: false
            config:
              full.path: "false"
              introspection.token.claim: "true"
              userinfo.token.claim: "true"
              multivalued: "true"
              id.token.claim: "true"
              lightweight.claim: "false"
              access.token.claim: "true"
              claim.name: "groups"
      - clientId: openinwoner
        name: Open Inwoner
        enabled: true
        clientAuthenticatorType: client-secret
        redirectUris:
          - "{{ .Values.openinwoner.configuration.oidcUrl }}/*"
        webOrigins:
          - "{{ .Values.openinwoner.configuration.oidcUrl }}/*"
        secret: {{ .Values.openinwoner.configuration.oidcSecret | quote }}
        protocolMappers:
          - name: "username"
            protocol: "openid-connect"
            protocolMapper: oidc-usermodel-property-mapper
            config:
              introspection.token.claim: "true"
              userinfo.token.claim: "true"
              user.attribute: "username"
              id.token.claim: "true"
              lightweight.claim: "false"
              access.token.claim: "true"
              claim.name: "preferred_username"
              jsonType.label: "String"
          - name: "groups-member"
            protocol: "openid-connect"
            protocolMapper: "oidc-group-membership-mapper"
            consentRequired: false
            config:
              full.path: "false"
              introspection.token.claim: "true"
              userinfo.token.claim: "true"
              multivalued: "true"
              id.token.claim: "true"
              lightweight.claim: "false"
              access.token.claim: "true"
              claim.name: "groups"
      - clientId: kiss
        name: Kiss
        enabled: true
        clientAuthenticatorType: client-secret
        redirectUris:
          - "{{ .Values.kiss.configuration.oidcUrl }}/*"
        webOrigins:
          - "{{ .Values.kiss.configuration.oidcUrl }}/*"
        secret: {{ .Values.kiss.configuration.oidcSecret | quote }}
        protocolMappers:
          - name: kiss-roles
            protocol: openid-connect
            protocolMapper: oidc-usermodel-client-role-mapper
            config:
              usermodel.clientRoleMapping.clientId: kiss
              multivalued: true
              claim.name: roles
              id.token.claim: true
              access.token.claim: true
              lightweight.claim: true
              userinfo.token.claim: true
              introspection.token.claim: true
    {{- if .Values.zac.enabled }}
      - clientId: {{ .Values.zac.auth.clientId }}
        name: Zaakafhandelcomponent
        enabled: true
        clientAuthenticatorType: client-secret
        redirectUris:
          - "{{ .Values.zac.contextUrl }}/*"
        webOrigins:
          - "{{ .Values.zac.contextUrl }}/*"
        secret: {{ .Values.zac.auth.secret | quote }}
        protocolMappers:
          - name: "username"
            protocol: "openid-connect"
            protocolMapper: oidc-usermodel-property-mapper
            config:
              introspection.token.claim: "true"
              userinfo.token.claim: "true"
              user.attribute: "username"
              id.token.claim: "true"
              lightweight.claim: "false"
              access.token.claim: "true"
              claim.name: "preferred_username"
              jsonType.label: "String"
          - name: "groups-member"
            protocol: "openid-connect"
            protocolMapper: "oidc-group-membership-mapper"
            consentRequired: false
            config:
              full.path: "false"
              introspection.token.claim: "true"
              userinfo.token.claim: "true"
              multivalued: "true"
              id.token.claim: "true"
              lightweight.claim: "false"
              access.token.claim: "true"
              claim.name: "group_membership"
      - clientId: {{ .Values.zac.keycloak.adminClient.id }}
        name: Zaakafhandelcomponent Admin Client
        enabled: true
        clientAuthenticatorType: client-secret
        secret: {{ .Values.zac.keycloak.adminClient.secret | quote }}
        redirectUris:
          - "{{ .Values.zac.contextUrl }}/*"
        webOrigins:
          - "{{ .Values.zac.contextUrl }}/*"
        serviceAccountsEnabled: true
        protocolMappers:
          - name: "Client Host"
            protocol: "openid-connect"
            protocolMapper: "oidc-usersessionmodel-note-mapper"
            consentRequired: false
            config:
              user.session.note: "clientHost"
              id.token.claim: "true"
              introspection.token.claim: "true"
              access.token.claim: "true"
              claim.name: "clientHost"
              jsonType.label: "String"
          - name: "Client IP Address"
            protocol: "openid-connect"
            protocolMapper: "oidc-usersessionmodel-note-mapper"
            consentRequired: false
            config:
              user.session.note: "clientAddress"
              id.token.claim: "true"
              introspection.token.claim: "true"
              access.token.claim: "true"
              claim.name: "clientAddress"
              jsonType.label: "String"
          - name: "Client ID"
            protocol: "openid-connect"
            protocolMapper: "oidc-usersessionmodel-note-mapper"
            consentRequired: false
            config:
              user.session.note: "client_id"
              id.token.claim: "true"
              introspection.token.claim: "true"
              access.token.claim: "true"
              claim.name: "client_id"
              jsonType.label: "String"
    users:
      - username: "service-account-zaakafhandelcomponent-admin-client"
        enabled: "true"
        totp: "false"
        serviceAccountClientId: "{{ .Values.zac.keycloak.adminClient.id }}"
        clientRoles:
          realm-management:
            - "view-users"
          account:
            - "view-groups"
    {{- end }}

    smtpServer:
      starttls: {{ .Values.keycloak.config.smtp.starttls }}
      port: {{ .Values.keycloak.config.smtp.port }}
      host: {{ .Values.keycloak.config.smtp.server }}
      from: {{ .Values.keycloak.config.smtp.from }}
      fromDisplayName: {{ .Values.keycloak.config.smtp.fromDisplayName }}
      ssl: {{ .Values.keycloak.config.smtp.ssl }}
    browserSecurityHeaders:
      xContentTypeOptions: "nosniff"
      xRobotsTag: "none"
      xFrameOptions: "SAMEORIGIN"
      contentSecurityPolicy: "frame-src 'self'; frame-ancestors 'self'; object-src 'none';"
      xXSSProtection: "1; mode=block"
      strictTransportSecurity: ""
    roles:
      realm:
        - name: podiumd-admin
          description: PodiumD Administrator
      client:
        abc:
          - name: administrators
        openklant:
          - name: administrators
        objecten:
          - name: administrators
        objecttypen:
          - name: administrators
        openzaak:
          - name: administrators
        opennotificaties:
          - name: administrators
        openformulieren:
          - name: administrators
        openinwoner:
          - name: administrators
        kiss:
          - name: Redacteur
          - name: Klantcontactmedewerker
        {{- if .Values.zac.enabled }}
        zac:
          - name: zaakafhandelcomponent_user
          - name: behandelaar
          - name: beheerder
          - name: coordinator
          - name: recordmanager
          - name: domein_elk_zaaktype
        {{- end }}
    groups:
      - name: administrators
        path: /administrators
        attributes:
          description:
            - "Administrators"
        realmRoles:
          - "podiumd-admin"
        clientRoles:
          {{- if .Values.zac.enabled }}
          zac:
            - "recordmanager"
            - "zaakafhandelcomponent_user"
            - "domein_elk_zaaktype"
            - "beheerder"
            - "coordinator"
            - "behandelaar"
          {{- end }}
          abc:
            - "administrators"
          objecten:
            - "administrators"
          objecttypen:
            - "administrators"
          openzaak:
            - "administrators"
          openklant:
            - "administrators"
          openformulieren:
            - "administrators"
          openinwoner:
            - "administrators"
          opennotificaties:
            - "administrators"
      {{- if .Values.zac.enabled }}
      - name: "behandelaars"
        path: "/behandelaars"
        attributes:
          description:
            - "Behandelaars"
        clientRoles:
          zac:
            - "domein_elk_zaaktype"
            - "zaakafhandelcomponent_user"
            - "behandelaar"
      - name: coordinators
        path: /coordinators
        attributes:
          description:
            - "Coordinators"
        clientRoles:
          zac:
            - "zaakafhandelcomponent_user"
            - "domein_elk_zaaktype"
            - "coordinator"
            - "behandelaar"
      - name: recordmanagers
        path: /recordmanagers
        attributes:
          description:
            - "Recordmanagers"
        clientRoles:
          zac:
            - "zaakafhandelcomponent_user"
            - "domein_elk_zaaktype"
            - "coordinator"
            - "behandelaar"
            - "recordmanager"
      - name: beheerders
        path: /beheerders
        attributes:
          description:
            - "Beheerders"
        clientRoles:
          zac:
            - "zaakafhandelcomponent_user"
            - "domein_elk_zaaktype"
            - "coordinator"
            - "behandelaar"
            - "beheerder"
            - "recordmanager"
      {{- end }}
    requiredActions:
      - name: "Configure OTP"
        providerId: CONFIGURE_TOTP
        enabled: "true"
        defaultAction: "true"
        alias: CONFIGURE_TOTP
    eventsEnabled: "true"
    eventsExpiration: "10800"
    adminEventsEnabled: "true"
{{- with .Values.keycloak.config.realmIdentityProviders }}
    {{- toYaml . | nindent 4 }}
{{- end }}
{{- with .Values.keycloak.config.realmIdentityProviderMappers }}
    {{- toYaml . | nindent 4 }}
{{- end }}
{{- end }}
{{- end }}