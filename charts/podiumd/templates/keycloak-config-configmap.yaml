{{- if .Values.keycloak.keycloakConfigCli.enabled -}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.keycloak.keycloakConfigCli.existingConfigmap }}
  labels:
    {{- include "podiumd.labels" . | nindent 4 }}
    app.kubernetes.io/component: keycloak-config-cli
data:
  realm.yaml: |
  {{- if .Values.global.configuration.enabled }}
    enabled: true
    realm: podiumd
    displayName: {{ .Values.keycloak.config.realmDisplayName | quote }}
    loginWithEmailAllowed: true
    rememberMe: true
    attributes:
      frontendUrl: {{ .Values.keycloak.config.realmFrontendUrl | quote }}
    clients:
      - clientId: openzaak
        name: Open Zaak
        enabled: true
        clientAuthenticatorType: client-secret
        redirectUris:
          - "{{ .Values.openzaak.configuration.oidcUrl }}/*"
        webOrigins:
          - "{{ .Values.openzaak.configuration.oidcUrl }}/*"
        secret: {{ .Values.openzaak.configuration.oidcSecret | quote }}
      - clientId: opennotificaties
        name: Open Notificaties
        enabled: true
        clientAuthenticatorType: client-secret
        redirectUris:
          - "{{ .Values.opennotificaties.configuration.oidcUrl }}/*"
        webOrigins:
          - "{{ .Values.opennotificaties.configuration.oidcUrl }}/*"
        secret: {{ .Values.opennotificaties.configuration.oidcSecret | quote }}
      - clientId: objecten
        name: Objecten
        enabled: true
        clientAuthenticatorType: client-secret
        redirectUris:
          - "{{ .Values.objecten.configuration.oidcUrl }}/*"
        webOrigins:
          - "{{ .Values.objecten.configuration.oidcUrl }}/*"
        secret: {{ .Values.objecten.configuration.oidcSecret | quote }}
      - clientId: objecttypen
        name: Objecttypen
        enabled: true
        clientAuthenticatorType: client-secret
        redirectUris:
          - "{{ .Values.objecttypen.configuration.oidcUrl }}/*"
        webOrigins:
          - "{{ .Values.objecttypen.configuration.oidcUrl }}/*"
        secret: {{ .Values.objecttypen.configuration.oidcSecret | quote }}
      - clientId: openklant
        name: Open Klant
        enabled: true
        clientAuthenticatorType: client-secret
        redirectUris:
          - "{{ .Values.openklant.configuration.oidcUrl }}/*"
        webOrigins:
          - "{{ .Values.openklant.configuration.oidcUrl }}/*"
        secret: {{ .Values.openklant.configuration.oidcSecret | quote }}
      {{- if .Values.tags.formulier }}
      - clientId: openformulieren
        name: Open Formulieren
        enabled: true
        clientAuthenticatorType: client-secret
        redirectUris:
          - "{{ .Values.openformulieren.configuration.oidcUrl }}/*"
        webOrigins:
          - "{{ .Values.openformulieren.configuration.oidcUrl }}/*"
        secret: {{ .Values.openformulieren.configuration.oidcSecret | quote }}
      {{- end }}
      {{- if .Values.tags.portaal }}
      - clientId: openinwoner
        name: Open Inwoner
        enabled: true
        clientAuthenticatorType: client-secret
        redirectUris:
          - "{{ .Values.openinwoner.configuration.oidcUrl }}/*"
        webOrigins:
          - "{{ .Values.openinwoner.configuration.oidcUrl }}/*"
        secret: {{ .Values.openinwoner.configuration.oidcSecret | quote }}
      {{- end }}
      {{- if .Values.tags.contact }}
      - clientId: kiss
        name: Kiss
        enabled: true
        clientAuthenticatorType: client-secret
        redirectUris:
          - "{{ .Values.kiss.configuration.oidcUrl }}/*"
        webOrigins:
          - "{{ .Values.kiss.configuration.oidcUrl }}/*"
        secret: {{ .Values.kiss.configuration.oidcSecret | quote }}
        protocolMappers:
          - name: kiss-roles
            protocol: openid-connect
            protocolMapper: oidc-usermodel-client-role-mapper
            config:
              usermodel.clientRoleMapping.clientId: kiss
              multivalued: true
              claim.name: roles
              id.token.claim: true
              access.token.claim: true
              lightweight.claim: true
              userinfo.token.claim: true
              introspection.token.claim: true
      {{- end }}
      {{- if .Values.tags.zaak }}
      - clientId: zac
        name: Zaakafhandelcomponent
        enabled: true
        clientAuthenticatorType: client-secret
        redirectUris:
          - "{{ .Values.zac.configuration.oidcUrl }}/*"
        webOrigins:
          - "{{ .Values.zac.configuration.oidcUrl }}/*"
        secret: {{ .Values.zac.configuration.oidcSecret | quote }}
        protocolMappers:
          - name: zac-roles
            protocol: openid-connect
            protocolMapper: oidc-usermodel-client-role-mapper
            config:
              usermodel.clientRoleMapping.clientId: zac
              multivalued: true
              claim.name: roles
              id.token.claim: true
              access.token.claim: true
              lightweight.claim: true
              userinfo.token.claim: true
              introspection.token.claim: true
      {{- end }}
    roles:
      realm:
        - name: podiumd-admin
          description: PodiumD Administrator
      {{- if or .Values.tags.contact .Values.tags.zaak }}
      client:
        {{- if .Values.tags.contact }}
        kiss:
          - name: Redacteur
          - name: Klantcontactmedewerker
        {{- end }}
        {{- if .Values.tags.zaak }}
        zac:
          - name: zaakafhandelcomponent_user
          - name: behandelaar
          - name: beheerder
          - name: coordinator
          - name: recordmanager
          - name: domein_elk_zaaktype
        {{- end }}
      {{- end }}
    {{- if .Values.tags.zaak }}
    components:
      org.keycloak.storage.UserStorageProvider:
        - name: OpenLDAP
          providerId: ldap
          config:
            vendor:
              - other
            connectionUrl:
              - ldap://openldap.openldap:1389
            connectionPooling:
              - true
            bindDn:
              - cn=admin,dc=dimpact,dc=org
            bindCredential:
              - admin
            editMode:
              - WRITABLE
            usersDn:
              - ou=lab3,dc=dimpact,dc=org
            usernameLDAPAttribute:
              - cn
            rdnLDAPAttribute:
              - cn
            uuidLDAPAttribute:
              - entryUUID
            userObjectClasses:
              - inetOrgPerson
            pagination:
              - true
            importEnabled:
              - false
            batchSizeForSync:
              - "1000"
            fullSyncPeriod:
              - "-1"
            changedSyncPeriod:
              - "-1"
          subComponents:
            org.keycloak.storage.ldap.mappers.LDAPStorageMapper:
              - name: groups
                providerId: group-ldap-mapper
                config:
                  groups.dn:
                    - ou=lab3,dc=dimpact-lab,dc=org
                  group.object.classes:
                    - groupOfUniqueNames,extensibleObject
                  preserve.group.inheritance:
                    - false
                  membership.ldap.attribute:
                    - uniqueMember
                  mode:
                    - LDAP_ONLY
                  mapped.group.attributes:
                    - description,email
    {{- end }}
  {{- end }}
{{- end }}