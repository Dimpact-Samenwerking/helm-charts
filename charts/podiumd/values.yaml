global:
  configuration:
    enabled: true
    overwrite: true
    organization: Example gemeente

  settings:
    databaseHost: ""

  imageRegistry: ""

cnpg:
  enabled: true

cluster:
  #fullnameOverride: cluster
  enabled: true
  type: postgis
  mode: standalone
  version:
    postgis: "3.4"
    postgresql: "15"
  cluster:
    instances: 1
    initdb:
      database: podiumd
  backups:
    enabled: false

nfs-server-provisioner:
  storageClass:
    mountOptions:
      - vers=4
      - retrans=2
      - timeo=30
  persistence:
    enabled: true
    size: 10Gi

traefik:
  persistence:
    enabled: true
    storageClass: nfs
    accessMode: ReadWriteMany
    size: 1Gi
    subPath: "traefik"
  additionalArguments:
    - --certificatesresolvers.myresolver.acme.tlschallenge
    - --certificatesresolvers.myresolver.acme.email=itops@info.nl
    - --certificatesresolvers.myresolver.acme.storage=/data/acme.json
      #- --certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory
    - --certificatesresolvers.myresolver.acme.httpChallenge.entryPoint=web
      #- --entryPoints.test.address=":80"
      #- --entryPoints.testsecure.address=":443"


persistentVolume:
  volumeAttributeShareName: ""
  volumeAttributeResourceGroup: ""
  nodeStageSecretRefName: ""
  nodeStageSecretRefNamespace: ""

keycloak:
  auth:
    adminUser: admin
    adminPassword: "changemenow"
  # -- cache setting for keycloak, if there are multiple instances they will automatically form a cluster for the cache
  cache:
    enabled: true
    stackName: kubernetes
  config:
    adminFrontendUrl: https://keycloak-admin.example.nl
    # Example configuration
    #     identityProviders:
    #     - alias: "oidc-admin-users"
    #      displayName: "podiumd admin users"
    #      providerId: "oidc"
    #      enabled: true
    #      updateProfileFirstLoginMode: "on"
    #      config:
    #        tokenUrl: "https://login.microsoftonline.com/organizations/oauth2/v2.0/token"
    #        jwksUrl: "https://login.microsoftonline.com/organizations/discovery/v2.0/keys"
    #        issuer: "https://login.microsoftonline.com/{ tenantId }/v2.0"
    #        clientSecret: "{ clientSecret }"
    #        clientId: "{ clientId }"
    #        syncMode: "FORCE"
    #        userInfoUrl: "https://graph.microsoft.com/oidc/userinfo"
    #        metadataDescriptorUrl: "https://login.microsoftonline.com/organizations/v2.0/.well-known/openid-configuration"
    #        authorizationUrl: "https://login.microsoftonline.com/organizations/oauth2/v2.0/authorize"
    #        logoutUrl: "https://login.microsoftonline.com/organizations/oauth2/v2.0/logout"
    # -- identity providers for the admin realm (usually master)
    adminIdentityProviders: {}
    # Example configuration
    #    identityProviderMappers:
    #    - name: "admin-group-mapper"
    #      identityProviderAlias: "oidc-admin-users"
    #      identityProviderMapper: "oidc-hardcoded-role-idp-mapper"
    #      config:
    #        syncMode: "FORCE"
    #        role: "admin"
    # -- identity provider mapper for the admin realm
    adminIdentityProviderMappers: {}
    adminOtpEnabled: false
    realm: podiumd
    realmDisplayName: PodiumD
    realmFrontendUrl: https://keycloak.example.nl
    realmIdentityProviders: {}
    realmIdentityProviderMappers: {}
    smtp:
      server: mail.example.nl
      port: "587"
      from: "Test"
      fromDisplayName: "noreply@example.nl"
      starttls: "true"
      ssl: "false"
    clients:
      monitoring:
        name: Monitoring (Grafana)
        enabled: true
        secret: "monitoring_secret"
        oidcUrl: "https://monitoring.example.nl"
  # -- required to activate infinispan
  # customCaExistingSecret: ispn-secret
  # -- enable keycloak by default
  enabled: true
  # -- required to activate infinispan
  #extraEnvVars: |
  #  - name: KC_TRUSTSTORE_PATHS
  #    value: "/opt/bitnami/keycloak/custom-ca"
  # -- required to activate infinispan
  #extraStartupArgs: "--cache-remote-host=ispn --cache-remote-port=11222 --cache-remote-username=keycloak --cache-remote-password=changemenow --log-level=INFO --spi-connections-infinispan-quarkus-site-name=ontw-dimp"
  # image parameters for keycloak
  image:
    registry: ""
    repository: bitnami/keycloak
    tag: 25.0.6
  externalDatabase:
    host: "postgres"
    database: ""
    user: ""
    password: ""
  fullnameOverride: keycloak
  keycloakConfigCli:
    cleanupAfterFinished:
      enabled: true
      seconds: 600
    enabled: true
    existingConfigmap: podiumd-config
    # image parameters for keycloak-config-cli
    image:
      registry: ""
      repository: bitnami/keycloak-config-cli
      # -- image tag for keycloak-config-cli, this must be a version that is compatible with the keycloak image tag
      tag: "6.1.6"
  metrics:
    enabled: true
  pdb:
    create: false
  networkPolicy:
    enabled: false
  podSecurity:
    enabled: false
  postgres:
    enabled: false
  replicaCount: 1
  resources:
    requests:
      cpu: 50m
      memory: 512Mi
  serviceMonitor:
    enabled: true
  production: true
  proxy: edge
  proxyHeaders: xforwarded
  postgresql:
    enabled: false
  nameOverride: keycloak
  extraEnvVarsCM: keycloak-extra-env-vars

infinispan:
  deploy:
    nameOverride: ispn
    replicas: 2
    container:
      imagePullPolicy: IfNotPresent
      storage:
        storageClassName: podiumd-standard
    secretName: ispn-generated-secret
    security:
      secretName: ispn-generated-secret
      monitor:
        secret: changememonitor
      batch: |
        credentials add keystore -c password -p secret --path="internal-credentials.pfx"
        user create keycloak -p changemenow -g deployer
        user create admin -p changemetoo -g admin
    # how to generate your own secret for use:
    # openssl req -nodes -x509 -sha256 -newkey rsa:4096 -keyout ispn.key -out ispn.crt -days 3560 -subj "/C=NL/ST=Noord Holland/L=Amsterdam/O=INFO/OU=integratieteam/CN=ispn" -addext "subjectAltName = DNS:ispn,DNS:ispn.podiumd,DNS:ispn.podiumd.svc.cluster.local"
    # openssl pkcs12 -export -out ispn.pfx -inkey ispn.key -in ispn.crt -name server
    # use password as passphrase (as added under credentials add command above)
    # keytool -list -keystore ispn.keystore -storepass password
    # kubectl create secret generic ispn-secret --from-file=tls.crt=ispn.crt --from-file=tls.key=ispn.key --from-file=keystore.p12=ispn.pfx --from-literal=password=password --from-literal=alias=server -n podiumd
    # kubectl create secret generic ispn-transport-secret --from-file=tls.crt=ispn.crt --from-file=tls.key=ispn.key --from-file=cert.p12=ispn.pfx --from-literal=password=password --from-literal=alias=server -n podiumd
    # -- which secrets can be used for ssl, see above how to generate a proper secret for use with infinispan
    ssl:
      endpointSecretName: "ispn-secret"
      transportSecretName: "ispn-transport-secret"
    # see https://docs.jboss.org/infinispan/15.0/configdocs/infinispan-config-15.0.html for possible options
    # infinispan configuration yaml preferences for usage with keycloak
    infinispan:
      cacheContainer:
        serialization:
          allow-list:
            regex: "org.keycloak.*"
        transport:
          stack: "kubernetes"
          lock-timeout: "60000"
          urn:infinispan:server:15.0:securityRealm: "cluster-transport"
        caches:
          actionTokens:
            distributedCache:
              statistics: "true"
              owners: 2
              mode: "SYNC"
              encoding:
                mediaType: "application/x-jboss-marshalling"
              expiration:
                maxIdle: "-1"
                lifespan: "-1"
                interval: "300000"
              memory:
                maxCount: "-1"
              persistence:
                fileStore:
                  path: cache
          sessions:
            distributedCache:
              statistics: "true"
              owners: 2
              mode: "SYNC"
              encoding:
                mediaType: "application/x-jboss-marshalling"
              expiration:
                lifespan: "-1"
              persistence:
                fileStore:
                  path: cache
          authenticationSessions:
            distributedCache:
              statistics: "true"
              owners: 2
              mode: "SYNC"
              encoding:
                mediaType: "application/x-jboss-marshalling"
              expiration:
                lifespan: "-1"
              persistence:
                fileStore:
                  path: cache
          offlineSessions:
            distributedCache:
              statistics: "true"
              owners: 2
              mode: "SYNC"
              encoding:
                mediaType: "application/x-jboss-marshalling"
              expiration:
                lifespan: "-1"
              persistence:
                fileStore:
                  path: cache
          clientSessions:
            distributedCache:
              statistics: "true"
              owners: 2
              mode: "SYNC"
              encoding:
                mediaType: "application/x-jboss-marshalling"
              expiration:
                lifespan: "-1"
              persistence:
                fileStore:
                  path: cache
          offlineClientSessions:
            distributedCache:
              statistics: "true"
              owners: 2
              mode: "SYNC"
              encoding:
                mediaType: "application/x-jboss-marshalling"
              expiration:
                lifespan: "-1"
              persistence:
                fileStore:
                  path: cache
          loginFailures:
            distributedCache:
              statistics: "true"
              owners: 2
              mode: "SYNC"
              encoding:
                mediaType: "application/x-jboss-marshalling"
              expiration:
                lifespan: "-1"
              persistence:
                fileStore:
                  path: cache
          work:
            replicatedCache:
              statistics: "true"
              encoding:
                mediaType: "application/x-jboss-marshalling"
              expiration:
                lifespan: "-1"
      server:
        security:
          credentialStores:
            - name: credentials
              path: internal-credentials.pfx
              clearTextCredential:
                clearText: "secret"
          securityRealms:
            - name: default
              # [USER] Comment or remove this properties realm to disable authentication.
              propertiesRealm:
                groupProperties:
                  path: groups.properties
                groupsAttribute: Roles
                userProperties:
                  path: users.properties
              serverIdentities:
                ssl:
                  keystore:
                    alias: "server"
                    path: "/etc/encrypt/endpoint/keystore.p12"
                    credentialReference:
                      store: credentials
                      alias: keystore
            - name: "cluster-transport"
              # Security realm for cluster transport. This setup is for encryption only, no authentication.
              # All the cluster server will use the same certificate both for key and trust store.
              propertiesRealm:
                groupProperties:
                  path: groups.properties
                groupsAttribute: Roles
                userProperties:
                  path: users.properties
              serverIdentities:
                ssl:
                  keystore:
                    alias: "server"
                    path: "/etc/encrypt/transport/cert.p12"
                    credentialReference:
                      store: credentials
                      alias: keystore
                  truststore:
                    path: "/etc/encrypt/transport/cert.p12"
                    credentialReference:
                      store: credentials
                      alias: keystore
            - name: metrics
              # [METRICS] Security realm for the metrics endpoint.
              propertiesRealm:
                groupProperties:
                  path: metrics-groups.properties
                  relativeTo: infinispan.server.config.path
                groupsAttribute: Roles
                userProperties:
                  path: metrics-users.properties
                  relativeTo: infinispan.server.config.path
  enabled: false
  monitoring:
    enabled: true

abc:
  configuration:
    oidcUrl: https://abc.example.nl
    oidcSecret: "abc"
  enabled: false

openzaak:
  configuration:
    enabled: true
    initContainer:
      enabled: false
    job:
      enabled: true
      backoffLimit: 6
      ttlSecondsAfterFinished: 0    
      restartPolicy: Never
      resources: {}
    data: ""  
    # data: |-
    #   oidc_db_config_enable: true
    #   oidc_db_config_admin_auth:
    #     items:
    #     - identifier: admin-oidc
    #       enabled: True
    #       oidc_rp_client_id: openzaak.example.nl
    #       oidc_rp_client_secret: ${keycloak_client_secret}
    #       oidc_rp_scopes_list:
    #       - openid
    #       - email
    #       - profile
    #       - roles
    #       oidc_rp_sign_algo: RS256
    #       endpoint_config:
    #         oidc_op_discovery_endpoint: https://keycloak.example.nl/realms/gemeente-x/
    #       username_claim:
    #       - sub
    #       groups_claim:
    #       - roles
    #       claim_mapping:
    #         first_name:
    #         - given_name
    #         last_name:
    #         - family_name
    #         email:
    #         - email
    #       sync_groups: true
    #       sync_groups_glob_pattern: "*"
    #       default_groups: []
    #       make_users_staff: true
    #       superuser_group_names:
    #       - Superuser
    #       oidc_use_nonce: true
    #       oidc_nonce_size: 32
    #       oidc_state_size: 32
    #       userinfo_claims_source: id_token          
    #   zgw_consumers_config_enable: true
    #   zgw_consumers:
    #     services:
    #     - identifier: notifications-api
    #       label: Notificaties API
    #       api_root: https://opennotificaties.example.nl/api/v1/
    #       api_connection_check_path: notificaties
    #       api_type: nrc
    #       auth_type: zgw
    #       client_id: open-zaak
    #       secret: ${openzaak_opennotificaties_secret}        
    #     - identifier: selectielijst-api
    #       label: Selectielijst API
    #       api_root: https://selectielijst.openzaak.nl/api/v1/
    #       api_type: orc
    #       auth_type: no_auth      
    #   vng_api_common_credentials_config_enable: true
    #   vng_api_common_credentials:
    #     items:
    #     - identifier: open-formulieren
    #       secret: ${openzaak_openforms_secret}
    #     - identifier: openinwoner
    #       secret: ${openzaak_openinwoner_secret}
    #     - identifier: open-notificaties
    #       secret: ${opennotificaties_autorisatie_api_secret}
    #     - identifier: open-zaak
    #       secret: ${openzaak_opennotificaties_secret}         
    #   sites_config_enable: true
    #   sites_config:
    #     items:
    #     - domain: openzaak.example.nl
    #       name: Open-Zaak Gemeente-x
    #   notifications_config_enable: true
    #   notifications_config:
    #     notifications_api_service_identifier: notifications-api
    #     notification_delivery_max_retries: 1
    #     notification_delivery_retry_backoff: 2
    #     notification_delivery_retry_backoff_max: 3
    #   openzaak_selectielijst_config_enable: true
    #   openzaak_selectielijst_config:
    #     selectielijst_api_service_identifier: selectielijst-api
    #     allowed_years:
    #       - 2020
    #       - 2017
    #     default_year: 2020
    #   vng_api_common_applicaties_config_enable: true
    #   vng_api_common_applicaties:
    #     items:
    #     - uuid: c8132033-0a8e-4d65-8a15-66d040b9b6ee
    #       client_ids:
    #       - open-formulieren
    #       label: Open Formulieren
    #       heeft_alle_autorisaties: true
    #     - uuid: bd1eef6d-1d32-4df4-845c-d21ce72f1306
    #       client_ids:
    #       - openinwoner
    #       label: Open Inwoner
    #       heeft_alle_autorisaties: true
    #     - uuid: 7b4771df-3166-4873-a09b-33745a291c32
    #       client_ids:
    #       - open-notificaties
    #       label: Open Notificatie
    #       heeft_alle_autorisaties: true
    #     - uuid: e620beb2-a767-42b0-b61e-e5d50ac503b9
    #       client_ids:
    #       - open-zaak
    #       label: Open Zaak
    #       heeft_alle_autorisaties: true
    secrets: {}
      # openzaak_openforms_secret: "<openzaak_openforms_secret>"
      # openzaak_openinwoner_secret: "<openzaak_openinwoner_secret>"
      # opennotificaties_autorisatie_api_secret: "<opennotificaties_autorisatie_api_secret>"
      # openzaak_opennotificaties_secret: "<openzaak_opennotificaties_secret>"
    oidcUrl: https://openzaak.example.nl
    oidcSecret: "<openzaak>"             
  create_required_catalogi_job:
    client_id: "<openzaak_client_id>"
    secret: "<openzaak_secret>"
    enabled: true
  settings:
    allowedHosts: openzaak-nginx.podiumd.svc.cluster.local
    email:
      port: 587
      useTLS: true
    disable2fa: false
  persistence:
    storageClassName: nfs
    size: 1Gi
  image:
    tag: "1.18.0"
  resources:
    requests:
      cpu: 100m
      memory: 256Mi
  worker:
    replicaCount: 1
    resources:
      requests:
        cpu: 10m
        memory: 480Mi
  nameOverride: openzaak
  fullnameOverride: openzaak
  flower:
    enabled: false
  beat:
    resources:
      requests:
        cpu: 10m
        memory: 160Mi
  nginx:
    resources:
      requests:
        cpu: 10m
        memory: 16Mi
  redis:
    nameOverride: openzaak-redis
    fullnameOverride: openzaak-redis
    master:
      persistence:
        enabled: true
        size: 1Gi
        storageClass: default
      resources:
        requests:
          cpu: 10m
          memory: 64Mi

opennotificaties:
  configuration:
    enabled: true
    overwrite: true
    http_request_job:
      enabled: false
    initContainer:
      enabled: false
    job:
      enabled: true
      backoffLimit: 6
      ttlSecondsAfterFinished: 0
      restartPolicy: OnFailure
      resources: {}
    secrets: {}
      # keycloak_client_secret: "<keycloak_client_secret>"
      # opennotificaties_autorisatie_api_secret: "<opennotificaties_autorisatie_api_secret>"
      # opennotificaties_opennotificaties_secret: "<opennotificaties_opennotificaties_secret>"
      # openzaak_opennotificaties_secret: "<openzaak_opennotificaties_secret>"
    data: ""  
    # data: |-
    #   oidc_db_config_enable: True
    #   oidc_db_config_admin_auth:
    #     items:
    #     - identifier: admin-oidc
    #       enabled: True
    #       oidc_rp_client_id: opennotificaties.example.nl
    #       oidc_rp_client_secret: ${keycloak_client_secret}
    #       oidc_rp_scopes_list:
    #       - openid
    #       - email
    #       - profile
    #       - roles
    #       oidc_rp_sign_algo: RS256
    #       endpoint_config:
    #         oidc_op_discovery_endpoint: https://keycloak.example.nl/realms/gemeente-x/
    #       username_claim:
    #       - sub
    #       groups_claim:
    #       - roles
    #       claim_mapping:
    #         first_name:
    #         - given_name
    #         last_name:
    #         - family_name
    #         email:
    #         - email
    #       sync_groups: true
    #       sync_groups_glob_pattern: "*"
    #       default_groups: []
    #       make_users_staff: true
    #       superuser_group_names:
    #       - Superuser
    #       oidc_use_nonce: true
    #       oidc_nonce_size: 32
    #       oidc_state_size: 32
    #       userinfo_claims_source: id_token
    #   zgw_consumers_config_enable: true
    #   zgw_consumers:
    #     services:
    #       - identifier: autorisaties-api
    #         label: Autorisaties API
    #         api_root: https://openzaak.example.nl/autorisaties/api/v1/
    #         api_type: ac
    #         auth_type: zgw
    #         client_id: open-notificaties
    #         secret: ${opennotificaties_autorisatie_api_secret}
    #         user_id: open-notificaties
    #         user_representation: Open Notificaties
    #       - identifier: notificaties-api
    #         label: Notificaties API
    #         api_root: https://opennotificaties.example.nl/api/v1/
    #         api_type: nrc
    #         auth_type: zgw
    #         client_id: open-notificaties
    #         secret: ${opennotificaties_opennotificaties_secret}
    #   autorisaties_api_config_enable: true
    #   autorisaties_api:
    #     # Configure Open Notificaties to make use of Open Zaak's Autorisaties API
    #     authorizations_api_service_identifier: autorisaties-api
    #   notifications_config_enable: true
    #   notifications_config:
    #     notifications_api_service_identifier: notificaties-api
    #     notification_delivery_max_retries: 5
    #     notification_delivery_retry_backoff: 3
    #     notification_delivery_retry_backoff_max: 48
    #   vng_api_common_credentials_config_enable: true
    #   vng_api_common_credentials:
    #     items:
    #     # Credentials for Open Zaak to be able to make requests to Open Notificaties
    #     - identifier: open-zaak
    #       secret: ${openzaak_opennotificaties_secret}
    #     # Credentials for Open Notificaties to talk to itself
    #     - identifier: open-notificaties
    #       secret: ${opennotificaties_opennotificaties_secret}
    #   notifications_kanalen_config_enable: true
    #   notifications_kanalen_config:
    #     items:
    #       - naam: autorisaties
    #         documentatie_link: https://openzaak.example.nl/ref/kanalen/#/autorisaties         
    #         filters: 
    #           - autorisaties
    #       - naam: besluittypen
    #         documentatie_link: https://openzaak.example.nl/ref/kanalen/#/besluittypen
    #         filters:
    #           - catalogus
    #       - naam: informatieobjecttypen
    #         documentatie_link: https://openzaak.example.nl/ref/kanalen/#/informatieobjecttypen
    #         filters:
    #           - catalogus
    #       - naam: zaaktypen
    #         documentatie_link: https://openzaak.example.nl/ref/kanalen/#/zaaktypen
    #         filters:
    #           - catalogus
    #       - naam: zaken
    #         documentatie_link: https://openzaak.example.nl/ref/kanalen/#/zaken
    #         filters:
    #           - bronorganisatie
    #           - zaaktype
    #           - vertrouwelijkheidaanduiding
    #       - naam: documenten
    #         documentatie_link: https://openzaak.example.nl/ref/kanalen/#/documenten
    #         filters:
    #           - bronorganisatie
    #           - informatieobjecttype
    #           - vertrouwelijkheidaanduiding
    #       - naam: besluiten
    #         documentatie_link: https://openzaak.example.nl/ref/kanalen/#/besluiten
    #         filters:
    #           - verantwoordelijke_organisatie
    #           - besluittype
    #   # The configuration check view will show a checkmark, but for it to actually work an 
    #   # Abonnement also has to be configured via notifications_abonnementen_config. This does not work right now, 
    #   # because the spec doesn't properly support JWT. See issue open-zaak/open-zaak#1694
    #   notifications_subscriptions_config_enable: true
    #   notifications_subscriptions_config:
    #     items:
    #       - uuid: 02907e89-1ba8-43e9-a86c-d0534d461316
    #         channels:
    #           - autorisaties
    #         identifier: open-notificaties
    #         callback_url: https://opennotificaties.example.nl/api/v1/callbacks
    #         client_id: open-notificaties
    #         secret: ${opennotificaties_opennotificaties_secret}
    #   notifications_abonnementen_config_enable: true
    #   notifications_abonnementen_config:
    #     items:
    #       - uuid: 1d4a40cd-d5dd-49c8-a570-712a5daa61b8
    #         callback_url: https://openzaak.example.nl/api/v1/callback
    #         auth: Token foo
    #         kanalen:
    #           - filters:
    #               zaaktype: https://openzaak.example.nl/catalogi/api/v1/zaaktypen/d7d70285-6157-480d-8e22-6d2b3e80a856
    #             naam: zaken
    #           - filters:
    #               vertrouwelijkheidaanduiding: beperkt_openbaar
    #             naam: zaken
    #       - uuid: df62ca62-3e02-4ebe-bfb8-c224e7c08f3f
    #         callback_url: https://ontw-openzaak.dimpact.opengem.nl/api/v1/other-callback
    #         auth: Token bar
    #         kanalen:
    #           - naam: zaken
    #   sites_config_enable: true
    #   sites_config:
    #     items:
    #       - domain: opennotificaties.example.nl
    #         name: Open Notificaties Gemeente-x
    oidcUrl: https://opennotificaties.example.nl
    oidcSecret: "<opennotificaties>"
  settings:
    allowedHosts: opennotificaties.podiumd.svc.cluster.local
    maxRetries: 5
    retryBackoff: 3
    retryBackoffMax: 48
    requestsTimeout: 60
    email:
      port: 587
      useTLS: true
    disable2fa: false
  persistence:
    size: 10Gi
    existingClaim: opennotificaties
  persistentVolume:
    volumeAttributeShareName: opennotificaties
  image:
    tag: "1.8.2"
  resources:
    requests:
      cpu: 100m
      memory: 256Mi
  worker:
    replicaCount: 1
    resources:
      requests:
        cpu: 50m
        memory: 386Mi
  nameOverride: opennotificaties
  fullnameOverride: opennotificaties
  flower:
    enabled: false
  rabbitmq:
    resources:
      requests:
        cpu: 300m
        memory: 256Mi
    nameOverride: opennotificaties-rabbitmq
    fullnameOverride: opennotificaties-rabbitmq
    auth:
      username: guest
      password: guest
      erlangCookie: SUPER-SECRET
  redis:
    nameOverride: opennotificaties-redis
    fullnameOverride: opennotificaties-redis
    master:
      persistence:
        enabled: true
        size: 8Gi
        storageClass: ""
      resources:
        requests:
          cpu: 10m
          memory: 64Mi

objecten:
  configuration:
    enabled: true  
    demo:
      enabled: false
    initContainer:
      enabled: false
    job:
      enabled: true
      backoffLimit: 6
      ttlSecondsAfterFinished: 0
      restartPolicy: OnFailure
      resources: {}
    secrets: {}
      # keycloak_client_secret: "<keycloak_client_secret>"  
      # object_objecttypes_token: "<object_objecttypes_token>"
      # object_notificaties_token: "<object_notificaties_token>"
      # openformulieren_objecten_token: "<openformulieren_objecten_token>"
    data: ""  
    # data: |-
    #   oidc_db_config_enable: true
    #   oidc_db_config_admin_auth:
    #     items:
    #     - identifier: admin-oidc
    #       enabled: True
    #       oidc_rp_client_id: objecten.example.nl
    #       oidc_rp_client_secret: '${keycloak_client_secret}'
    #       oidc_rp_scopes_list:
    #       - openid
    #       - email
    #       - profile
    #       - roles
    #       oidc_rp_sign_algo: RS256
    #       endpoint_config:
    #         oidc_op_discovery_endpoint: https://keycloak.example.nl/realms/gemeente-x/
    #       username_claim:
    #       - sub
    #       groups_claim:
    #       - roles
    #       claim_mapping:
    #         first_name:
    #         - given_name
    #         last_name:
    #         - family_name
    #         email:
    #         - email
    #       sync_groups: true
    #       sync_groups_glob_pattern: "*"
    #       default_groups: []
    #       make_users_staff: true
    #       superuser_group_names:
    #       - Superuser
    #       oidc_use_nonce: true
    #       oidc_nonce_size: 32
    #       oidc_state_size: 32
    #       userinfo_claims_source: id_token    
    #   zgw_consumers_config_enable: true
    #   zgw_consumers:
    #     services:
    #     - identifier: objecttypes-api
    #       label: Objecttypes API
    #       api_root: https://objecttypen.example.nl/api/v2/
    #       api_connection_check_path: objecttypes
    #       api_type: orc
    #       auth_type: api_key
    #       header_key: Authorization
    #       header_value: Token ${object_objecttypes_token}
    #     - identifier: notifications-api
    #       label: Notificaties API
    #       api_root: https://notificaties.example.nl/api/v1/
    #       api_connection_check_path: notificaties
    #       api_type: nrc
    #       auth_type: api_key
    #       header_key: Authorization
    #       header_value: Token ${object_notificaties_token}
    #   notifications_config_enable: true
    #   notifications_config:
    #     notifications_api_service_identifier: notifications-api
    #     notification_delivery_max_retries: 1
    #     notification_delivery_retry_backoff: 2
    #     notification_delivery_retry_backoff_max: 3
    #   tokenauth_config_enable: true
    #   tokenauth:
    #     items:
    #       - identifier: openformulier-token
    #         token: ${openformulieren_objecten_token}
    #         contact_person: Person 1
    #         email: person-1@example.com
    #         organization: Organization 1
    #         application: Application 1
    #         administration: Administration 1
    #         permissions:
    #           - object_type: 66518702-59fd-4de4-a1d7-e160e29964a4
    #             mode: read_and_write
    #   objecttypes_config_enable: true
    #   objecttypes:
    #     items:
    #       - uuid: 66518702-59fd-4de4-a1d7-e160e29964a4
    #         name: demo
    #         service_identifier: objecttypes-api
    #   sites_config_enable: true
    #   sites_config:
    #     items:
    #       - domain: objecten.example.nl
    #         name: objecten
    oidcUrl: https://objecten.example.nl
    oidcSecret: "<objecten>" 
  settings:
    allowedHosts: objecten.podiumd.svc.cluster.local
    email:
      port: 587
      useTLS: true
    disable2fa: false
  persistence:
    storageClassName: nfs
    size: 1Gi
  image:
    tag: "3.0.4"
  resources:
    requests:
      cpu: 100m
      memory: 256Mi
  worker:
    replicaCount: 1
    resources:
      requests:
        cpu: 50m
        memory: 192Mi
  nameOverride: objecten
  fullnameOverride: objecten
  flower:
    enabled: false
  redis:
    nameOverride: objecten-redis
    fullnameOverride: objecten-redis
    master:
      persistence:
        enabled: true
        size: 1Gi
        storageClass: default
      resources:
        requests:
          cpu: 10m
          memory: 64Mi

objecttypen:
  configuration:
    enabled: true
    initContainer:
      enabled: false
    job:
      enabled: true
      backoffLimit: 6
      ttlSecondsAfterFinished: 0
      restartPolicy: OnFailure
      resources: {}
    secrets: {}
      # keycloak_client_secret: "<keycloak_client_secret>"
      # object_objecttypes_token: "<object_objecttypes_token>"
      # openformulieren_objecten_token: "<openformulieren_objecten_token>"
    data: ""  
    # data: |-
    #   oidc_db_config_enable: true
    #   oidc_db_config_admin_auth:
    #     items:
    #     - identifier: admin-oidc
    #       enabled: True
    #       oidc_rp_client_id: objecttypen.example.nl
    #       oidc_rp_client_secret: '${keycloak_client_secret}'
    #       oidc_rp_scopes_list:
    #       - openid
    #       - email
    #       - profile
    #       - roles
    #       oidc_rp_sign_algo: RS256
    #       endpoint_config:
    #         oidc_op_discovery_endpoint: https://keycloak.example.nl/realms/gemeente-x/
    #       username_claim:
    #       - sub
    #       groups_claim:
    #       - roles
    #       claim_mapping:
    #         first_name:
    #         - given_name
    #         last_name:
    #         - family_name
    #         email:
    #         - email
    #       sync_groups: true
    #       sync_groups_glob_pattern: "*"
    #       default_groups: []
    #       make_users_staff: true
    #       superuser_group_names:
    #       - Superuser
    #       oidc_use_nonce: true
    #       oidc_nonce_size: 32
    #       oidc_state_size: 32
    #       userinfo_claims_source: id_token      
    #   tokenauth_config_enable: true
    #   tokenauth:
    #     items:
    #       - identifier: objecten-token
    #         token: ${object_objecttypes_token}
    #         contact_person: Person 1
    #         email: person-1@example.com
    #         organization: Organization 1
    #         application: Objecten API
    #         administration: Administration 1
    #       - identifier: openformulier-token
    #         token: ${openformulieren_objecten_token}
    #         contact_person: Person 1
    #         email: person-1@example.com
    #         organization: Organization 1
    #         application: Application 1
    #         administration: Administration 1
    #   sites_config_enable: true
    #   sites_config:
    #       items:
    #         - domain: objecttypen.example.nl
    #           name: objecttypen  
    token: "<token>"
    oidcUrl: https://objecttypen.example.nl
    oidcSecret: "<objecttypen>"
  settings:
    allowedHosts: objecttypen.podiumd.svc.cluster.local
    email:
      port: 587
      useTLS: true
    disable2fa: false
  image:
    tag: "3.0.2"
  # used for create-required-objecttypen podiumd job only
  create_required_objecttypen_job:
    enabled: true
  resources:
    requests:
      cpu: 10m
      memory: 160Mi
  nameOverride: objecttypen
  fullnameOverride: objecttypen
  redis:
    nameOverride: objecttypen-redis
    fullnameOverride: objecttypen-redis
    master:
      persistence:
        enabled: true
        size: 1Gi
        storageClass: default
      resources:
        requests:
          cpu: 10m
          memory: 64Mi


openarchiefbeheer:
  enabled: false
  nameOverride: openarchiefbeheer
  fullnameOverride: openarchiefbeheer
  configuration:
    enabled: false
    job:
      enabled: true
      backoffLimit: 6
      ttlSecondsAfterFinished: 0
      restartPolicy: OnFailure
    secrets: {}
    data: ""
    # data: |-
    #   zgw_consumers_config_enable: true
    #   zgw_consumers:
    #     services:
    #     - identifier: zaken-dimpact-acc
    #       label: Open Zaak - Zaken API
    #       api_root: https://example.openzaak.nl/zaken/api/v1/
    #       api_type: zrc
    #       auth_type: zgw
    #       client_id: openarchiefbeheer
    #       secret: ${oab_openzaak_secret}
    #     - identifier: documenten-dimpact-acc
    #       label: Open Zaak - Documenten API
    #       api_root: https://example.openzaak.nl/documenten/api/v1/
    #       api_type: drc
    #       auth_type: zgw
    #       client_id: openarchiefbeheer
    #       secret: ${oab_openzaak_secret}
    #     - identifier: catalogus-dimpact-acc
    #       label: Open Zaak - Catalogi API
    #       api_root: https://example.openzaak.nl/catalogi/api/v1/
    #       api_type: ztc
    #       auth_type: zgw
    #       client_id: openarchiefbeheer
    #       secret: ${oab_openzaak_secret}
    #     - identifier: besluiten-dimpact-acc
    #       label: Open Zaak - Besluiten API
    #       api_root: https://example.openzaak.nl/besluiten/api/v1/
    #       api_type: brc
    #       auth_type: zgw
    #       client_id: openarchiefbeheer
    #       secret: ${oab_openzaak_secret}
    #     - identifier: selectielijst
    #       label: Open Zaak (public) - Selectielijst API
    #       api_root: https://selectielijst.openzaak.nl/api/v1/
    #       api_type: orc
    #       auth_type: no_auth

    #   api_configuration_enabled: true
    #   api_configuration:
    #     selectielijst_service_identifier: selectielijst

    #   oidc_db_config_enable: true
    #   oidc_db_config_admin_auth:
    #     items:
    #     - identifier: admin-oidc
    #       enabled: true
    #       oidc_rp_client_id: example-client-id
    #       oidc_rp_client_secret: ${keycloak_client_secret}
    #       oidc_rp_sign_algo: "RS256"
    #       oidc_token_use_basic_auth: false
    #       username_claim:
    #         - preferred_username
    #       groups_claim:
    #         - resource_access
    #         - example-client-id
    #         - roles
    #       superuser_group_names:
    #         - Superuser
    #       userinfo_claims_source: userinfo_endpoint
    #       oidc_rp_idp_sign_key: ""
    #       endpoint_config:
    #         oidc_op_discovery_endpoint: https://example.keycloak.nl/realms/podiumd-poc/
  

  tags:
    redis: true

  replicaCount: 1

  image:
    tag: "1.0.0"

  resources:
    limits: {}
    requests:
      cpu: 250m
      memory: 256Mi

  settings:
    allowedHosts: openarchiefbeheer.podiumd.svc.cluster.local
    # -- Name of the environment (used for displaying purposes)
    environment: ""
    requestsReadTimeout: "5000"
    # -- Number of days to wait before destroying a list. Defaults to 7 in the application.
    waitingPeriod: ""

    frontend:
      apiUrl: ""
      apiPath: "/api/v1"
      zaakUrlTemplate: ""

    frontendUrl: ""
    retry:
      total: ""
      backoffFactor: ""
      statusForcelist: ""

  persistence:
    size: 10Gi
    existingClaim: openarchiefbeheer
  persistentVolume:
    volumeAttributeShareName: openarchiefbeheer

  redis:
    nameOverride: openarchiefbeheer-redis
    fullnameOverride: openarchiefbeheer-redis
    architecture: standalone
    auth:
      enabled: false
    master:
      persistence:
        enabled: true
        size: 8Gi
        storageClass: ""
      resources:
        requests:
          cpu: 10m
          memory: 20Mi

openklant:
  configuration:
    enabled: true
    initContainer:
      enabled: false
    job:
      enabled: true
      backoffLimit: 6
      ttlSecondsAfterFinished: 0
      restartPolicy: OnFailure
      resources: {}
    secrets: {}
      # openklant_token: "<openklant_token>"
      # keycloak_client_secret: "<keycloak_client_secret>"   
    data: ""        
    # data: |-
    #   oidc_db_config_enable: True
    #   oidc_db_config_admin_auth:
    #     items:
    #     - identifier: admin-oidc
    #       enabled: True
    #       oidc_rp_client_id: openklant.example.nl
    #       oidc_rp_client_secret: ${keycloak_client_secret}
    #       oidc_rp_scopes_list:
    #       - openid
    #       - email
    #       - profile
    #       - roles
    #       oidc_rp_sign_algo: RS256
    #       endpoint_config:
    #         oidc_op_discovery_endpoint: https://keycloak.example.nl/realms/gemeente-x/
    #       username_claim:
    #       - sub
    #       groups_claim:
    #       - roles
    #       claim_mapping:
    #         first_name:
    #         - given_name
    #         last_name:
    #         - family_name
    #         email:
    #         - email
    #       sync_groups: true
    #       sync_groups_glob_pattern: "*"
    #       default_groups: []
    #       make_users_staff: true
    #       superuser_group_names:
    #       - Superuser
    #       oidc_use_nonce: true
    #       oidc_nonce_size: 32
    #       oidc_state_size: 32
    #       userinfo_claims_source: id_token
    #   tokenauth_config_enable: true
    #   tokenauth:
    #     items:
    #       - identifier: token-1
    #         token: ${openklant_token}
    #         contact_person: Person 1
    #         email: test@example.com
    #         organization: Organization XYZ
    #         application: Application XYZ
    #         administration: Administration XYZ
    #   zgw_consumers_config_enable: true
    #   zgw_consumers:
    #     services:
    #     - identifier: open-notificaties
    #       label: Open Notificaties
    #       api_root: https://notificaties.example.nl/api/v1/
    #       api_type: nrc
    #       auth_type: zgw
    #       client_id: open-klant
    #       user_id: open-klant
    #       secret: ${openklant_token}
    #   notifications_config_enable: true
    #   notifications_config:
    #     notifications_api_service_identifier: open-notificaties
    #     notification_delivery_max_retries: 1
    #     notification_delivery_retry_backoff: 2
    oidcUrl: https://openklant.example.nl
    oidcSecret: "<openklant>"
  settings:
    allowedHosts: openklant.podiumd.svc.cluster.local
    email:
      port: 587
      useTLS: true
    disable2fa: false
  persistence:
    size: 10Gi
    existingClaim: openklant
  persistentVolume:
    volumeAttributeShareName: openklant
  image:
    tag: "2.7.0"
  resources:
    requests:
      cpu: 100m
      memory: 300Mi
  worker:
    replicaCount: 1
    resources:
      requests:
        cpu: 50m
        memory: 200Mi
  nameOverride: openklant
  fullnameOverride: openklant
  nginx:
    resources:
      requests:
        cpu: 10m
        memory: 16Mi
  redis:
    nameOverride: openklant-redis
    fullnameOverride: openklant-redis
    master:
      persistence:
        enabled: true
        size: 8Gi
        storageClass: ""
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
        
openformulieren:
  configuration:
    enabled: true
    job:
      enabled: true
      backoffLimit: 6
      ttlSecondsAfterFinished: 0
      restartPolicy: OnFailure
    secrets: {}
    data: ""
    # data: |-
    #   oidc_db_config_enable: True
    #   oidc_db_config_admin_auth:
    #     items:
    #     - identifier: admin-oidc
    #       enabled: True
    #       oidc_rp_client_id: openformulieren.example.nl
    #       oidc_rp_client_secret: ${keycloak_client_secret}
    #       oidc_rp_scopes_list:
    #       - openid
    #       - email
    #       - profile
    #       - roles
    #       oidc_rp_sign_algo: RS256
    #       endpoint_config:
    #         oidc_op_discovery_endpoint: https://keycloak.example.nl/realms/gemeente-x/
    #       username_claim:
    #       - sub
    #       groups_claim:
    #       - roles
    #       claim_mapping:
    #         first_name:
    #         - given_name
    #         last_name:
    #         - family_name
    #         email:
    #         - email
    #       sync_groups: true
    #       sync_groups_glob_pattern: "*"
    #       default_groups: []
    #       make_users_staff: true
    #       superuser_group_names:
    #       - Superuser
    #       oidc_use_nonce: true
    #       oidc_nonce_size: 32
    #       oidc_state_size: 32
    #       userinfo_claims_source: id_token
    #   zgw_consumers_config_enable: True
    #   zgw_consumers:
    #     services:
    #     - identifier: objecttypen-api
    #       label: Objecttypen API
    #       api_root: https://objecten.example.nl/api/v2/
    #       api_type: orc
    #       auth_type: api_key
    #       header_key: Authorization
    #       header_value: Token ${openformulieren_objecten_token}

    #     - identifier: objecten-api
    #       label: Objecten API test
    #       api_root: https://objecttypen.example.nl/api/v2/
    #       api_type: orc
    #       auth_type: api_key
    #       header_key: Authorization
    #       header_value: Token ${openformulieren_objecten_token}

    #     - identifier: documenten-api
    #       label: Documenten API
    #       api_root: https://openzaak.example.nl/documenten/api/v1/
    #       api_type: drc
    #       auth_type: zgw
    #       client_id: open-formulieren
    #       secret: ${openzaak_openformulieren_secret}

    #     - identifier: zaken-api
    #       label: Zaken API
    #       api_root: https://openzaak.example.nl/zaken/api/v1/
    #       api_type: zrc
    #       auth_type: zgw
    #       client_id: open-formulieren
    #       secret: ${openzaak_openformulieren_secret}

    #     - identifier: catalogus-api
    #       label: Catalogus API
    #       api_root: https://openzaak.example.nl/catalogi/api/v1/
    #       api_type: ztc
    #       auth_type: zgw
    #       client_id: open-formulieren
    #       secret: ${openzaak_openformulieren_secret}
    #   objects_api_config_enable: True
    #   objects_api:
    #     groups:
    #     - name: Objects APIs
    #       identifier: objects-api
    #       objects_service_identifier: objecten-api
    #       objecttypes_service_identifier: objecttypen-api
    #       documenten_service_identifier: documenten-api
    #       catalogi_service_identifier: catalogus-api
    #       organisatie_rsin: "001876387"
    #       document_type_submission_report: PDF Informatieobjecttype
    #       document_type_submission_csv: CSV Informatieobjecttype
    #       document_type_attachment: Attachment Informatieobjecttype
    #       catalogue_domain: TEST
    #       catalogue_rsin: "000000000"
    #       organisatie_rsin: "000000000"
    #   zgw_api_config_enable: true
    #   zgw_api:
    #     groups:
    #     - name: Open Zaak SCC
    #       identifier: openzaak-scc
    #       zaken_service_identifier: zaken-api
    #       documenten_service_identifier: documenten-api
    #       catalogi_service_identifier: catalogus-api
    #       catalogue_domain: TEST
    #       catalogue_rsin: "000000000"
    #       organisatie_rsin: "000000000"
    #       auteur: Aanvrager
    #       zaak_vertrouwelijkheidaanduiding: openbaar
    #       doc_vertrouwelijkheidaanduiding: openbaar
    #       objects_api_json_content_template: |-
    #         {
    #           "data": {% json_summary %},
    #           "type": "{{ "{{" }} productaanvraag_type {{ "}}" }}",
    #           "bsn": "{{ "{{" }} variables.auth_bsn {{ "}}" }}",
    #           "submission_id": "{{ "{{" }} submission.kenmerk {{ "}}" }}",
    #           "language_code": "{{ "{{" }} submission.language_code {{ "}}" }}"
    #         }
    oidcUrl: https://openformulieren.example.nl
    oidcSecret: "<openformulieren>"
  settings:
    allowedHosts: openformulieren-nginx.podiumd.svc.cluster.local
    email:
      port: 587
      useTLS: true
  persistence:
    size: 10Gi
    existingClaim: openformulieren
    mediaMountSubpath: openformulieren/media
    privateMediaMountSubpath: openformulieren/private_media
  persistentVolume:
    volumeAttributeShareName: openformulieren
  image:
    tag: "3.0.7"
  resources:
    requests:
      cpu: 100m
      memory: 650Mi
  worker:
    replicaCount: 1
    resources:
      requests:
        cpu: 50m
        memory: 512Mi
  nameOverride: openformulieren
  fullnameOverride: openformulieren
  flower:
    enabled: false
  beat:
    resources:
      requests:
        cpu: 10m
        memory: 160Mi
  nginx:
    resources:
      requests:
        cpu: 10m
        memory: 16Mi
    config:
      clientMaxBodySize: 100M
  redis:
    nameOverride: openformulieren-redis
    fullnameOverride: openformulieren-redis
    master:
      persistence:
        enabled: true
        size: 8Gi
        storageClass: ""
      resources:
        requests:
          cpu: 10m
          memory: 64Mi

openinwoner:
  configuration:
    enabled: true
    initContainer:
      enabled: false
    job:
      enabled: true
      backoffLimit: 6
      ttlSecondsAfterFinished: 0
      restartPolicy: OnFailure
      resources: {}
    data: ""
    # data: |-
    #   oidc_db_config_enable: True
    #   oidc_db_config_admin_auth:
    #     items:
    #     - identifier: admin-oidc
    #       enabled: True
    #       oidc_rp_client_id: openinwoner.example.nl
    #       oidc_rp_client_secret: ${keycloak_client_secret}
    #       oidc_rp_scopes_list:
    #       - openid
    #       - email
    #       - profile
    #       - roles
    #       oidc_rp_sign_algo: RS256
    #       endpoint_config:
    #         oidc_op_discovery_endpoint: https://keycloak.example.nl/realms/gemeente-x/
    #       username_claim:
    #       - sub
    #       groups_claim:
    #       - roles
    #       claim_mapping:
    #         first_name:
    #         - given_name
    #         last_name:
    #         - family_name
    #       sync_groups: true
    #       sync_groups_glob_pattern: "*"
    #       default_groups: []
    #       make_users_staff: true
    #       superuser_group_names:
    #       - Superuser
    #       oidc_use_nonce: true
    #       oidc_nonce_size: 32
    #       oidc_state_size: 32
    #       userinfo_claims_source: id_token
    #   zgw_consumers_config_enable: True
    #   zgw_consumers:
    #     services:
    #       - identifier: zaken-test
    #         label: Open Zaak - Zaken API
    #         api_root: https://openzaak.example.nl/zaken/api/v1/
    #         api_type: zrc
    #         auth_type: zgw
    #         client_id: openinwoner
    #         secret: ${openzaak_openinwoner_secret}
    #       - identifier: documenten-test
    #         label: Open Zaak - Documenten API
    #         api_root: https://openzaak.example.nl/documenten/api/v1/
    #         api_type: drc
    #         auth_type: zgw
    #         client_id: openinwoner
    #         secret: ${openzaak_openinwoner_secret}
    #       - identifier: catalogi-test
    #         label: Open Zaak - Catalogi API
    #         api_root: https://openzaak.example.nl/catalogi/api/v1/
    #         api_type: ztc
    #         auth_type: zgw
    #         client_id: openinwoner
    #         secret: ${openzaak_openinwoner_secret}
    #       - identifier: besluiten-test
    #         label: Open Zaak - Besluiten API
    #         api_root: https://openzaak.example.nl/besluiten/api/v1/
    #         api_type: brc
    #         auth_type: zgw
    #         client_id: openinwoner
    #         secret: ${openzaak_openinwoner_secret}
    #       - identifier: selectielijst
    #         label: Open Zaak (public) - Selectielijst API
    #         api_root: https://selectielijst.openzaak.nl/api/v1/
    #         api_type: orc
    #         auth_type: no_auth
    #   openzaak_config_enable: true
    #   openzaak_config:
    #     zaak_max_confidentiality: openbaar
    #     document_max_confidentiality: vertrouwelijk
    #     max_upload_size: 50
    #     skip_notification_statustype_informeren: false
    #     reformat_esuite_zaak_identificatie: true
    #     derive_zaak_titel_from: zaaktype_omschrijving
    #     order_statuses_by_date_set: false
    #     title_text: title text from setup configuration
    #     enable_categories_filtering_with_zaken: true
    #     action_required_deadline_days: 1874
    #     zaken_filter_enabled: 'true'
    #     allowed_file_extensions:
    #       - .pdf
    #       - .txt
    #       - .doc
    #       - .docx
    #     api_groups:
    #       - zaken_api_identifier: zaken-test
    #         documenten_api_identifier: documenten-test
    #         catalogi_api_identifier: catalogi-test
    #         fetch_eherkenning_zaken_with_rsin: true
    #   sites_config_enable: true
    #   sites_config:
    #     items:
    #       - domain: openinwoner.example.nl
    #         name: Gemeente X
    secrets: {}
    oidcUrl: https://openinwoner.example.nl
    oidcSecret: "<openinwoner>"
  settings:
    allowedHosts: openinwoner-nginx.podiumd.svc.cluster.local
    brpVersion: ""
    digidMock: ""
    eherkenningMock: ""
    email:
      port: 587
      useTLS: true
  persistence:
    size: 10Gi
    existingClaim: openinwoner
  persistentVolume:
    volumeAttributeShareName: openinwoner
  image:
    tag: "1.29.0"
  resources:
    requests:
      cpu: 200m
      memory: 1Gi
  worker:
    replicaCount: 1
    resources:
      requests:
        cpu: 200m
        memory: 640Mi
  nameOverride: openinwoner
  fullnameOverride: openinwoner
  nginx:
    config:
      basicAuth:
        # Enable this when digid mock is set to digidMock: "true"
        enabled: false
        # You need to generate the encrypted basic auth password yourself with htpasswd or openssl.
        # This is an example user
        users: |-
          dimpact:$apr1$E03dZmYK$npjTaXfI05tMJ63gB8dxm. 
      clientMaxBodySize: 100M
    resources:
      requests:
        cpu: 30m
        memory: 8Mi
  redis:
    nameOverride: openinwoner-redis
    fullnameOverride: openinwoner-redis
    master:
      persistence:
        enabled: true
        size: 8Gi
        storageClass: ""
      resources:
        requests:
          cpu: 20m
          memory: 64Mi
  elasticsearch:
    nameOverride: openinwoner-elasticsearch
    fullnameOverride: openinwoner-elasticsearch
    master:
      resources:
        requests:
          cpu: 100m
          memory: 640Mi
    data:
      resources:
        requests:
          cpu: 100m
    coordinating:
      resources:
        requests:
          cpu: 100m
          memory: 512Mi

kisselastic:
  kibanaDomain: kiss-kb-http.podiumd.svc.cluster.local:5601
  eck-operator:
    managedNamespaces:
      - podiumd

kiss:
  enabled: true
  configuration:
    oidcUrl: https://kiss.example.nl
    oidcSecret: "<kiss>"

  brp:
    baseUrl: ""
    apiKey: ""

  elastic:
    baseUrl: ""
    username: elastic
    password: ""

  enterpriseSearch:
    baseUrl: ""
    privateApikey: ""
    publicApikey: ""
    engine: kiss-engine

  esuite:
    baseUrl: ""
    clientId: kiss
    secret: ""
    contactverzoektypen: []
    isDefault: true

  database:
    host: ""
    name: ""
    user: ""
    password: ""

  email:
    host: ""
    port: "587"
    username: ""
    password: ""
    enableSSL: "true"
    feedbackFrom: ""
    feedbackTo: ""

  kvk:
    baseUrl: ""
    apikey: ""

  objecten:
    baseUrl: ""
    token: ""

  objecttypen:
    baseUrlIntern: ""
    baseUrlExtern: ""
    token: ""
    afdelingUUID: ""
    groepUUID: ""
    interneTaakUUID: ""
    kennisartikelUUID: ""
    medewerkerUUID: ""
    vacUUID: ""

  vac:
    useVacs: false
    objectenBaseUrl: ""
    objectenToken: ""
    objectTypeUrl: ""
    objectTypeVersion: ""

  oidc:
    authority: ""
    clientId: kiss
    secret: ""
    medewerkerIdentificatieClaim: preferred_username
    medewerkerIdentificatieTruncate: null

  organisatieIds: ""

  imagePullSecrets: []



  nodeSelector: {}

  frontend:
    service:
      name: ""
    image:
      repository: ghcr.io/klantinteractie-servicesysteem/kiss-frontend
      tag: "release-1.0.x-20250418091744-8936963"


      pullPolicy: IfNotPresent
    resources:
      requests:
        cpu: 10m
        memory: 100Mi
    aspNetCoreEnvironment: Production

  adapter:
    baseUrl: ""
    clientId: kiss_intern
    secret: ""
    image:
      repository: ghcr.io/icatt-menselijk-digitaal/podiumd-adapter
      tag: "v0.6.x-20250225135230-fc9468b"
      pullPolicy: IfNotPresent
    resources:
      requests:
        cpu: 10m
        memory: 100Mi

  sync:
    initialSync: true
    schedule:
      kennisbank: "*/59 * * * *"
      smoelenboek: "*/59 * * * *"
      vac: "*/59 * * * *"
    successfulJobsHistoryLimit: 1
    failedJobsHistoryLimit: 1
    image:
      repository: "ghcr.io/klantinteractie-servicesysteem/kiss-elastic-sync"
      tag: "latest"
      pullPolicy: IfNotPresent

  alpine:
     image:
       repository: "alpine"
       tag: "3.20"
       pullPolicy: IfNotPresent

nameOverride: ""
fullnameOverride: ""

zac:
  auth:
    server: http://keycloak.example.nl
    realm: podiumd
    clientId: zac
    secret: changeme
  bagApi:
    url: http://bag.example.nl
    apiKey: "dummy"
  brpApi:
    url: http://brp.example.nl
    apiKey: "dummy"
  catalogusDomein: ALG
  contextUrl: http://zac.example.nl
  db:
    host: postgres
    name: zac
    user: zac
    password: changeme
  enabled: true
  nameOverride: zac
  fullnameOverride: zac
  gemeente:
    code: "007"
    naam: "Example Gemeente"
    mail: "noreply@example.nl"
  image:
    repository: ghcr.io/infonl/zaakafhandelcomponent
    pullPolicy: IfNotPresent
    tag: "3.5.0"
  keycloak:
    adminClient:
      id: zac-admin-client
      secret: changeme
  klantinteractiesApi:
    url: http://open-klant.example.nl
    token: openklanttoken
  kvkApi:
    url: http://kvk.example.nl
    apiKey: "dummy"
  mail:
    smtp:
      server: "mail.example.nl"
      port: "587"
      username: "dummy"
      password: "dummy"
  maxFileSizeMB: 150
  nginx:
    enabled: true
    client_max_body_size: 150M
  # notificationsSecretKey: "changeme"
  objectenApi:
    url: http://objecten.example.nl
    token: objectentoken
  objecttypenApi:
    url: http://objecttypen.example.nl
    token: objecttypentoken
  openForms:
    url: http://open-forms.example.nl
  organizations:
    bron:
      rsin: "000000000"
    verantwoordelijke:
      rsin: "000000000"
  smartDocuments:
    enabled: false
    url: ""
    authentication: ""
    fixedUserName: ""
  # solr operator settings
  solr-operator:
    # -- turn functionality on/off
    enabled: true
    image:
      #repository:
      #tag:
    nodeSelector: {}
    solr:
      #busyBoxImage:
        #repository:
        #tag:
      # -- set enabled to provision solrcloud as well
      enabled: true
      #image:
        #repository:
        #tag:
      # -- define memory settings for solr in the solrcloud
      javaMem: -Xms512m -Xmx768m
      jobs:
        createZacCore: true
        #image:
          #repository:
          #tag:
    # -- namespaces to watch for solr-operator
    watchNamespaces: "podiumd"
    zookeeper-operator:
      #hooks:
        #image:
          #repository:
          #tag:
      #image:
        #repository:
        #tag:
      # -- namespaces to watch for zookeeper-operator
      watchNamespace: "podiumd"
      #zookeeper:
        #image:
          #repository:
          #tag:
  zgwApis:
    url: http://open-zaak.internal
    urlExtern: http://open-zaak.example.nl
    clientId: zac
    secret: changeme

clamav:
  image:
    tag: "1.4.2"
  nameOverride: clamav
  fullnameOverride: clamav
  clamdConfig: |
    ###############
    # General
    ###############

    DatabaseDirectory /var/lib/clamav
    TemporaryDirectory /tmp
    LogTime yes
    # CUSTOM: Use pid file in tmp
    PidFile /tmp/clamd.pid
    LocalSocket /tmp/clamd.sock
    TCPSocket 3310
    Foreground yes

    ###############
    # Results
    ###############

    DetectPUA yes
    ExcludePUA NetTool
    ExcludePUA PWTool
    HeuristicAlerts yes
    Bytecode yes

    ###############
    # Scan
    ###############

    ScanPE yes
    DisableCertCheck yes
    ScanELF yes
    AlertBrokenExecutables yes
    ScanOLE2 yes
    ScanPDF yes
    ScanSWF yes
    ScanMail yes
    PhishingSignatures yes
    PhishingScanURLs yes
    ScanHTML yes
    ScanArchive yes

    ###############
    # Scan
    ###############

    MaxScanSize 150M
    MaxFileSize 30M
    MaxRecursion 10
    MaxFiles 15000
    MaxEmbeddedPE 10M
    MaxHTMLNormalize 10M
    MaxHTMLNoTags 2M
    MaxScriptNormalize 5M
    MaxZipTypeRcg 1M
    MaxPartitions 128
    MaxIconsPE 200
    PCREMatchLimit 10000
    PCRERecMatchLimit 10000
  freshclamConfig: |
    ###############
    # General
    ###############

    DatabaseDirectory /var/lib/clamav/
    UpdateLogFile /dev/stdout
    LogTime yes
    # CUSTOM: Use pid file in tmp
    PidFile /tmp/freshclam.pid
    # CUSTOM: Set defined user
    DatabaseOwner 2000

    ###############
    # Updates
    ###############

    DatabaseMirror database.clamav.net
    ScriptedUpdates yes
    NotifyClamd /etc/clamav/clamd.conf
    Bytecode yes
  resources:
    requests:
      cpu: 1000m
      memory: 4Gi

apiproxy:
  enabled: false
  replicaCount: 1
  imagePullSecrets: []
  nodeSelector: {}
  affinity: {}
  tolerations: []
  #nameOverride: "iconnect-proxy"
  image:
    repository: nginx
    tag: "1.27.4"
    pullPolicy: IfNotPresent
  service:
    port: 80
    containerPort: 8080
  resources:
    limits:
      cpu: "0.5"
      memory: "256Mi"
    requests:
      cpu: "0.1"
      memory: "128Mi"
  nginxCertsSecret: "api-proxy-certs"
  livenessProbe:
    initialDelaySeconds: 5
    periodSeconds: 10
  readinessProbe:
    initialDelaySeconds: 5
    periodSeconds: 10
  locations:
    commonSettings: &commonLocation
      sslVerify: "off"
      hostHeader: "lab.api.mijniconnect.nl"
    bag:
      <<: *commonLocation
      path: /lvbag/individuelebevragingen/v2/
      targetUrl: "https://lab.api.mijniconnect.nl/iconnect/apibagib/v2/"
    brp:
      <<: *commonLocation
      path: /haalcentraal/api/brp/
      targetUrl: "https://lab.api.mijniconnect.nl/iconnect/apihcbrp/actueel/prtcl/v2/"
    kvkSearch:
      <<: *commonLocation
      targetUrl: "https://lab.api.mijniconnect.nl/iconnect/apikvk/zoeken/v2/zoeken"
    kvkBasic:
      <<: *commonLocation
      targetUrl: "https://lab.api.mijniconnect.nl/iconnect/apikvk/basprof/v1/v1/basisprofielen"
    kvkBranch:
      <<: *commonLocation
      targetUrl: "https://lab.api.mijniconnect.nl/iconnect/apikvk/vesprof/v1/v1/vestigingsprofielen"

serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: ""
