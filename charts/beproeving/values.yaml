
# zgw-office-addin:
#   enabled: true
#   fullnameOverride: "zgw-office-addin"
#   frontend:
#     # ghcr.io/infonl/zgw-office-add-in-frontend:v0.0.205
#     image:
#       tag: v0.0.205
#     # the public url where manifest.xml and static js files are served
#     frontendUrl: http://office-addin.example.com
#     # by default this is not needed as it is proxied by the frontend host
#     backendPublicUrl: ""
#     # can be enabled if needed, if for instance you don't want an ingress
#     enableHttps: false
#   backend:
#     # ghcr.io/infonl/zgw-office-add-in-backend:
#     image:
#       tag: v0.0.205
#     # secret used to generate and validate JWT tokens
#     jwtSecret: "YOUR_SECRET_KEY"
#     # the base url of the openzaak api's
#     apiBaseUrl: "http://openzaak.example.com"


ita:
  postgresql:
    enabled: true
    image:
      repository: bitnamilegacy/postgresql
    auth:
      username: "ita"
      password: "MyP@$$w0rdishere"
      database: "interneTaakAfhandeling"
      postgresPassword: "MyP@$$w0rdishere"
    primary:
      persistence:
        enabled: true
        size: 8Gi
    metrics:
      enabled: false
      image:
        repository: bitnamilegacy/postgres-exporter
    volumePermissions:
      image:
        repository: bitnamilegacy/os-shell
  
  # Certificate configuration
  certificates:
    enabled: false # JIM
    installClusterIssuer: false # JIM
    issuerName: "letsencrypt-prod" # JIM
    commonName: "" # JIM
    email: "" # JIM
  
  # Ingress Configuration
  ingress:
    enabled: false # JIM
    host: ""
    port: 80
  
  # Database Configuration
  database:
    # When postgresql.enabled=true, host is auto-set to {Release.Name}-postgresql
    # Specify this host only when postgresql.enabled=false
    # host: ""
    # port: "5432"
    name: "interneTaakAfhandeling"
    username: "ita"
    password: "MyP@$$w0rdishere"
  
  # API Connections
  apiConnections:
    openKlant:
      baseUrl: ""
      apiKey: ""
    object:
      baseUrl: ""
      apiKey: ""
    zaakSysteem:
      baseUrl: ""
      clientId: ""
      key: ""
  
  logboek:
    type: ""
    typeVersion: 1
  
  # Web Application Configuration
  web:
    image:
      repository: "ghcr.io/interne-taak-afhandeling/internetaakafhandeling.web"
      tag: "latest"
      pullPolicy: Always
    
    service:
      type: ClusterIP
      port: 80
    
    oidc:
      authority: ""
      clientId: ""
      clientSecret: ""
      itaSystemAccessRole: ""
      nameClaimType: ""
      roleClaimType: ""
      objectregisterMedewerkerIdClaimType: ""
      emailClaimType: ""
    
    resources:
      logoUrl: ""
      faviconUrl: ""
      designTokensUrl: ""
      webFontSources: []
    
    appsettings:
      setting1: ""
      setting2: ""
  
  # Poller Configuration
  poller:
    schedule: "*/15 * * * *"
    
    image:
      repository: "ghcr.io/interne-taak-afhandeling/internetaakafhandeling.poller"
      tag: "latest"
      pullPolicy: Always
    
    notification:
      pollerMessage: "Poller uitgevoerd om:"
      hourThreshold: "-24"
    
    smtp:
      host: ""
      port: "25"
      username: ""
      password: ""
      fromEmail: ""
      enableSsl: "true"
  
  
