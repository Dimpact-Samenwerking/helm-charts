global:
  imageRegistry: ""  # Centralized registry config
  
grafana:
  image:
    registry: ""
    repository: "" 
    tag: ""

  downloadDashboardsImage:
    registry: ""
    repository: ""
    tag: ""

  additionalDataSources:
  - name: Loki
    type: loki
    uid: loki
    readOnly: false
    editable: true
    access: proxy
    isDefault: true
    url: http://{{ .Release.Name }}-gateway
    version: 1
    jsonData:
      timeout: 300
      
  datasources:
    alertmanager:
      enabled: false
    datasources.yaml:
      apiVersion: 1
      datasources:
        - name: Prometheus
          editable: true
          type: prometheus
          readOnly: false
          url: http://{{ .Release.Name }}-prometheus:9090
          access: proxy
          isDefault: false
      deleteDatasources:
        - name: Alertmanager

  adminPassword: ""

  nodeSelector:
    kubernetes.azure.com/mode: system

  containerSecurityContext:
    readOnlyRootFilesystem: true
    allowPrivilegeEscalation: false
    runAsNonRoot: true

  envFromSecrets:
    - name: ""
    - name: ""

  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
        - name: "default"
          orgId: 1
          folder: 'PodiumD_Monitoring_Logging'
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards/default

  dashboards:
    default:
      Logging-PodiumD:
        url: https://raw.githubusercontent.com/Dimpact-Samenwerking/helm-charts/refs/heads/feature/IN-72_monitoring-logging/charts/monitoring-logging/grafana/dashboards/logging_PodiumD.json
        token: ''
        datasource: Loki
  dashboardsConfigMaps:
    default: "loki-dashboard"

  grafana.ini:
    server:
      root_url: ""
    database:
      type: 
      host: ""
      name: ""
      user: ""
      password: ""
      ssl_mode: ""
    dataproxy:
      timeout: 300
      keep_alive_seconds: 300
    smtp:
      enabled: true
      host: ""
      from_address: ""
      skip_verify: true
    auth.azuread:
      name: Azure AD
      enabled: true
      allow_sign_up: true
      auto_login: true
      client_id: ""
      client_secret: ""
      scopes: ""
      auth_url: ""
      token_url: ""
      allowed_domains: []
      allowed_groups: []
      allowed_organizations: ""
      role_attribute_strict: false
      allow_assign_grafana_admin: true
      skip_org_role_sync: false
      use_pkce: true
    auth.basic:
      enabled: false  # disable standaard login
      disable_login_form: true
      allow_sign_up: false
    metrics:
      enabled: false
    dashboards:
      default_home_dashboard_path: /var/lib/grafana/dashboards/default/loki-dashboard.json

  initChownData:
    image:
      registry: "" 
      repository: ""
      tag: ""

  persistence:
    enabled: true
    storageClassName: ""
    accessModes:
      - ReadWriteOnce
    size: 20Gi
    type: pvc
    finalizers:
      - kubernetes.io/pvc-protection

prometheus:
  prometheusSpec:
  # read all serviceMonitors from all namespaces
   # basicAuth:
   #   enabled: true
   #   username: admin
   #   password: password
    logLevel: warn
    serviceMonitorSelectorNilUsesHelmValues: false
    retention: 72h
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: default
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 50Gi

alertmanager:
  enabled: false
