global:
  imageRegistry: ""
  
kube-prometheus-stack:
  enabled: true
  
  grafana:
    image:
      registry: ""
      repository: "" 
      tag: ""

    downloadDashboardsImage:
      registry: ""
      repository: ""
      tag: ""

    assertNoLeakedSecrets: false
    deleteDatasources:
      - name: Alertmanager

    additionalDataSources:
      - name: Loki
        type: loki
        uid: loki
        readOnly: false
        editable: true
        access: proxy
        isDefault: true
        url: http://{{ .Release.Name }}-gateway
        version: 1
        jsonData:
          timeout: 300

    datasources:
      alertmanager:
        enabled: false
      datasources.yaml:
        apiVersion: 1
        datasources:
          - name: Prometheus
            editable: true
            type: Prometheus
            readOnly: false
            url: http://{{ .Release.Name }}-prometheus:9090
            access: proxy
            isDefault: false

    adminPassword: ""

    nodeSelector:
      kubernetes.azure.com/mode: system

    containerSecurityContext:
      readOnlyRootFilesystem: true
      allowPrivilegeEscalation: false
      runAsNonRoot: true

    envFromSecrets:
      - name: ""
      - name: ""

    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: "default"
            orgId: 1
            folder: 'PodiumD_Monitoring_Logging'
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/default

    dashboards:
      default:
        Logging-PodiumD:
          url: ""
          token: ''
          datasource: ""

    dashboardsConfigMaps:
      default: "logging-podiumd-dashboard"

    grafana.ini:
      server:
        root_url: ""
      database:
        type: 
        host: ""
        name: ""
        user: ""
        password: ""
        ssl_mode: ""
      dataproxy:
        timeout: 300
        keep_alive_seconds: 300
      smtp:
        enabled: true
        host: ""
        from_address: ""
        skip_verify: true
      auth.azuread:
        name: Azure AD
        enabled: true
        allow_sign_up: true
        auto_login: true
        client_id: ""
        client_secret: ""
        scopes: ""
        auth_url: ""
        token_url: ""
        allowed_domains: []
        allowed_groups: []
        allowed_organizations: ""
        role_attribute_strict: false
        allow_assign_grafana_admin: true
        skip_org_role_sync: false
        use_pkce: true
      auth.basic:
        enabled: false  # disable standaard login
        disable_login_form: true
        allow_sign_up: false
      metrics:
        enabled: false
      dashboards:
        default_home_dashboard_path: /var/lib/grafana/dashboards/default/loki-dashboard.json

    initChownData:
      image:
        registry: "" 
        repository: ""
        tag: ""

    persistence:
      enabled: true
      storageClassName: ""
      accessModes:
        - ReadWriteOnce
      size: 20Gi
      type: pvc
      finalizers:
        - kubernetes.io/pvc-protection

    sidecar:
      datasources:
        alertmanager:
          enabled: false

  prometheus:
    prometheusSpec:
      logLevel: warn
      serviceMonitorSelectorNilUsesHelmValues: false
      retention: 72h
      storageSpec:
        volumeClaimTemplate:
          spec:
            storageClassName: ""
            accessModes: ["ReadWriteOnce"]
            resources:
              requests:
                storage: 50Gi

  alertmanager:
    enabled: false

  promtail:
    enabled: true
    config:
      logLevel: warn
      clients:
        - url: http://{{ .Release.Name }}-gateway/loki/api/v1/push
          tenant_id: 1
    image:
      registry: ""
      repository: ""
      tag: ""
    resources:
      requests:
        cpu: 50m
        memory: 96Mi
      limits:
        cpu: 100m
        memory: 256Mi

  loki:
    enabled: true
    podLabels:
      "azure.workload.identity/use": "true"
    image:
      registry: ""
      repository: loki
      tag: ""
    schemaConfig:
      configs:
        - from: 2024-04-01
          object_store: azure
          store: tsdb
          schema: v13
          index:
            prefix: loki_index_
            period: 24h
    storage_config:
      azure:
        account_name: "<INSERT-STORAGE-ACCOUNT-NAME>" 
        container_name: "<CHUNK-CONTAINER-NAME>" 
        use_federated_token: true

    storage:
      bucketNames:
        chunks: "<CHUNK-CONTAINER-NAME>"
        ruler: "<RULER-CONTAINER-NAME>"
      type: azure
      azure:
        useFederatedToken: true
        accountName: <INSERT-STORAGE-ACCOUNT-NAME>

    auth_enabled: false
    frontend:
      max_outstanding_per_tenant: 6144

    ingester:
      chunk_encoding: snappy
      chunk_idle_period: 30m
      chunk_block_size: 262144
      chunk_retain_period: 1m

    pattern_ingester:
      enabled: true

    tracing:
      enabled: false

    query_scheduler:
      max_outstanding_requests_per_tenant: 32768

    querier:
      max_concurrent: 6

    limits_config:
      allow_structured_metadata: true
      volume_enabled: true
      retention_period: 744h
      max_query_lookback: 744h
      ingestion_rate_strategy: local
      max_global_streams_per_user: 5000
      max_query_length: 744h
      max_query_parallelism: 48
      max_streams_per_user: 0
      split_queries_by_interval: 15m
      max_cache_freshness_per_query: 10m
      ingestion_rate_mb: 10 
      ingestion_burst_size_mb: 20

    compactor:
      working_directory: /data/retention
      retention_enabled: true
      delete_request_store: azure
      compaction_interval: 10m
      retention_delete_delay: 2h
      retention_delete_worker_count: 150

    ruler:
      enable_api: true
      storage:
        type: azure
        azure:
          account_name: <INSERT-STORAGE-ACCOUNT-NAME>
          container_name: <RULER-CONTAINER-NAME>
          use_federated_token: true

  serviceAccount:
    name: loki
    annotations:
      "azure.workload.identity/client-id": "<APP-ID>"
    labels:
      "azure.workload.identity/use": "true"

  deploymentMode: Distributed

  ingester:
    replicas: 3

  querier:
    replicas: 3
    maxUnavailable: 2

  queryFrontend:
    replicas: 2
    maxUnavailable: 1

  queryScheduler:
    replicas: 2

  distributor:
    replicas: 3
    maxUnavailable: 2

  compactor:
    replicas: 2

  indexGateway:
    replicas: 2
    maxUnavailable: 1

  ruler:
    replicas: 1
    maxUnavailable: 1

  bloomPlanner:
    replicas: 0

  bloomBuilder:
    replicas: 0

  bloomGateway:
    replicas: 0

  minio:
    enabled: false

  backend:
    replicas: 0
  read:
    replicas: 0
  write:
    replicas: 0

  singleBinary:
    replicas: 0

  gateway:
    service:
      type: LoadBalancer
    basicAuth: 
      enabled: true
      existingSecret: loki-basic-auth

  sidecar:
    image:
      registry: ""
      repository: ""
      tag: ""
    dashboards:
      skipReload: true

  resultsCache:
    enabled: true
    defaultValidity: 6h

  chunksCache:
    enabled: true
    defaultValidity: 6h
    allocatedMemory: 1024

  monitoring:
    selfMonitoring:
      enabled: false
      grafanaAgent:
        installOperator: false
    dashboards:
      enabled: false
    rules:
      enabled: false

  test:
    enabled: false

  lokiCanary:
    enabled: false

