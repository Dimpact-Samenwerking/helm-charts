grafana:
  enabled: true
  image:
    registry: REP_ACR_NAME_REP.azurecr.io
    repository: grafana
    tag: 11.5.2

  downloadDashboardsImage:
    registry: REP_ACR_NAME_REP.azurecr.io
    repository: curl
    tag: 7.85.0

  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
        - name: Loki
          editable: false
          type: loki
          url: http://loki-gateway
          isDefault: true
          jsonData:
            timeout: 300
      deleteDatasources:
        - name: Prometheus
        - name: Alertmanager

  adminPassword: "KV_GRAFANA_ADMIN_KV"

  resources:
    requests:
      cpu: 10m
      memory: 96Mi
    limits:
      cpu: 50m
      memory: 128Mi

  nodeSelector:
    kubernetes.azure.com/mode: system

  containerSecurityContext:
    readOnlyRootFilesystem: true
    allowPrivilegeEscalation: false
    runAsNonRoot: true

  envFromSecrets:
    - name: gf-database-password
    - name: gf-client-secret

  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
        - name: "default"
          orgId: 1
          folder: "loki"
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards/default

  dashboards: 
    default: 
      Logging_PodiumD:
        url: https://raw.githubusercontent.com/Dimpact-Samenwerking/helm-charts/refs/heads/feature/IN-72_monitoring-logging/charts/monitoring-logging/grafana/dashboards/logging_PodiumD.json
        token: ''
        datasource: Loki

  dashboardsConfigMaps:
    default: "loki-dashboard"

  grafana.ini:
    server:
      root_url: https://REP_DOMAIN_REP
    database:
      type: postgres
      host: psql-REP_ENVIRONMENT_REP-REP_GEMEENTE_REP.postgres.database.azure.com:5432
      name: grafana
      user: grafana
      password: $__env{gf-database-password}
      ssl_mode: require
    dataproxy:
      timeout: 300
      keep_alive_seconds: 300
    smtp:
      enabled: true
      host: mail.enschede.nl:587
      # existingSecret: ""
      from_address: noreply@REP_GRAFANA_DOMAIN_REP
      # passwordKey: ""
      # userKey: ""
      skip_verify: true
    auth.azuread:
      name: Azure AD
      enabled: true
      allow_sign_up: true
      auto_login: true
      client_id: REP_GRAFANA_ID_REP
      client_secret: $__env{gf-client-secret}
      scopes: openid email profile
      auth_url: https://login.microsoftonline.com/996a05f9-6875-4960-a833-6e3aff171400/oauth2/v2.0/authorize
      token_url: https://login.microsoftonline.com/996a05f9-6875-4960-a833-6e3aff171400/oauth2/v2.0/token
      allowed_domains:
      allowed_groups:
      allowed_organizations: 996a05f9-6875-4960-a833-6e3aff171400
      role_attribute_strict: false
      allow_assign_grafana_admin: true
      skip_org_role_sync: false
      use_pkce: true
    auth.basic:
      enabled: false  # Disable standard login
      disable_login_form: true
      allow_sign_up: false
    metrics:
      enabled: false
    dashboards:
      default_home_dashboard_path: /var/lib/grafana/dashboards/default/loki-dashboard.json

  initChownData:
    image:
      registry: REP_ACR_NAME_REP.azurecr.io
      repository: grafana-init-chown-data
      tag: 1.31.1

promtail:
  enabled: true
  config:
    logLevel: warn
  # -- publish data to loki
    clients:
      - url: http://loki-gateway/loki/api/v1/push
        tenant_id: 1 
  image:
    registry: REP_ACR_NAME_REP.azurecr.io
    repository: promtail
    tag: "3.0.0"
  resources:
    requests:
      cpu: 50m
      memory: 96Mi
    limits:
      cpu: 100m
      memory: 256Mi
      
loki:
  enabled: true
  podLabels:
    "azure.workload.identity/use": "true" # Add this label to the Loki pods to enable workload identity
  image:
    registry: REP_ACR_NAME_REP.azurecr.io
    repository: loki
    tag: "3.4.2"
  schemaConfig:
    configs:
      - from: 2024-04-01
        object_store: azure
        store: tsdb
        schema: v13
        index:
          prefix: loki_index_
          period: 24h
  storage_config:
     azure:
      account_name: "<INSERT-STORAGE-ACCOUNT-NAME>" 
      container_name: "<CHUNK-CONTAINER-NAME>" # Your actual Azure Blob Storage container name (loki-azure-dev-chunks)
      use_federated_token: true # Use federated token for authentication
          
  storage:
    bucketNames:
      chunks: "<CHUNK-CONTAINER-NAME>" # Your actual Azure Blob Storage container name (loki-azure-dev-chunks)
      ruler: "<RULER-CONTAINER-NAME>" # Your actual Azure Blob Storage container name (loki-azure-dev-ruler)
        # admin: "admin-loki-devrel" # Your actual Azure Blob Storage container name (loki-azure-dev-admin)
    type: azure
    azure:
      useFederatedToken: true # Use federated token for authentication
      accountName: <INSERT-STORAGE-ACCOUNT-NAME>

  auth_enabled: false
  frontend:
    max_outstanding_per_tenant: 6144 # Queue size for parallel processing
    
  ingester:
    chunk_encoding: snappy
    chunk_idle_period: 30m # Flush chunks faster = less memory
  pattern_ingester:
       enabled: true
      
  tracing:
    enabled: false
    
  querier:
    max_concurrent: 6 # Per-pod parallelism
    
  # -- Query Performance  
  limits_config:
    allow_structured_metadata: true
    volume_enabled: true
    retention_period: 672h # 28 days retention
    ingestion_rate_strategy: local # Default: global
    max_global_streams_per_user: 10000
    max_query_length: 721h # Default: 721h
    max_query_parallelism: 48 # Utilize Azure's high throughput
    max_streams_per_user: 0 # Old Default: 10000 
    split_queries_by_interval: 6h # Smaller splits = faster parallelization

  compactor:
    retention_enabled: true 
    delete_request_store: azure
  
  ruler:
    enable_api: true
    storage:
      type: azure
      azure:
        account_name: <INSERT-STORAGE-ACCOUNT-NAME>
        container_name: <RULER-CONTAINER-NAME> # Your actual Azure Blob Storage container name (loki-azure-dev-ruler)
        use_federated_token: true # Use federated token for authentication

# Define the Azure workload identity
serviceAccount:
  name: loki
  annotations:
    "azure.workload.identity/client-id": "<APP-ID>" # The app ID of the Azure AD app
  labels:
    "azure.workload.identity/use": "true"
    
deploymentMode: Distributed

ingester:
  replicas: 3 # 2-3 for HA, fewer for cost
  zoneAwareReplication:
    enabled: false

querier:
  replicas: 3 # Scale based on query load
  maxUnavailable: 2 # 2/3 pods unavailable during updates

queryFrontend:
  replicas: 2
  maxUnavailable: 1 # 1/2 pods can update
      
queryScheduler:
  replicas: 2

distributor:
  replicas: 3
  maxUnavailable: 2 # 2/3 pods down during updates
  
compactor:
  replicas: 1
  
indexGateway:
  replicas: 2
  maxUnavailable: 1 # 1/2 pods can update

ruler:
 replicas: 1
 maxUnavailable: 1
      
# -- Optional experimental components
bloomPlanner:
  replicas: 0
bloomBuilder:
  replicas: 0
bloomGateway:
  replicas: 0

# Enable minio for storage
minio:
 enabled: false

# -- Zero out replica counts of other deployment modes
backend:
  replicas: 0
read:
  replicas: 0
write:
  replicas: 0

singleBinary:
  replicas: 0

gateway:
  enabled: true
  image:
    registry: REP_ACR_NAME_REP.azurecr.io
    repository: nginx
    tag: stable
  resources:
    requests:
      cpu: 10m
      memory: 16Mi
    limits:
      cpu: 50m
      memory: 32Mi
  nodeSelector:
    kubernetes.azure.com/mode: system
  basicAuth: 
    enabled: true
    existingSecret: loki-basic-auth

sidecar:
  image:
    registry: REP_ACR_NAME_REP.azurecr.io
    repository: REP_ACR_NAME_REP.azurecr.io/grafana-sidecar
    tag: 1.26.1
  dashboards:
    skipReload: true

# -- Caching --
resultsCache:
  enabled: false
  
chunksCache:
  enabled: false
  allocatedMemory: 1536Mi

# -- Keep log data up to 3 months
table_manager:
  retention_deletes_enabled: true
  retention_period: 90d
  
monitoring:
  selfMonitoring:
    enabled: false
    grafanaAgent:
      installOperator: false
  dashboards:
    enabled: false
  rules:
    enabled: false

test:
  enabled: false

lokiCanary:
  enabled: false