grafana:
  additionalDataSources:
  - name: loki
    type: loki
    uid: loki
    readOnly: false
    editable: true
    access: proxy
    url: http://loki:3100
    jsonData:
        derivedFields:
          - datasourceUid: tempo
            matcherRegex: ((\d+|[a-z]+)(\d+|[a-z]+)(\d+|[a-z]+)(\d+|[a-z]+)(\d+|[a-z]+)(\d+|[a-z]+)(\d+|[a-z]+)(\d+|[a-z]+)(\d+|[a-z]+)(\d+|[a-z]+)(\d+|[a-z]+))
            name: TraceID
            url: $${__value.raw}
        maxLines: 1000
    version: 1
  - name: Tempo
    type: tempo
    readOnly: false
    editable: true
    uid: tempo
    url: http://tempo:3100
    access: proxy
    version: 1

  assertNoLeakedSecrets: false
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
      - name: 'default'
        orgId: 1
        folder: ''
        type: file
        updateIntervalSeconds: 10
        disableDeletion: false
        allowUiUpdates: true
        editable: true
        options:
          path: /var/lib/grafana/dashboards/default
  dashboards:
    default:
      Monitoring:
        url:
        token: ''
        datasource: Loki

  persistence:
    enabled: true
    accessModes:
    - ReadWriteOnce
    size: 50Gi
    type: pvc

promtail:
  image:
    registry: REP_ACR_NAME_REP.azurecr.io
    repository: promtail
    tag: "3.0.0"
  resources:
    requests:
      cpu: 50m
      memory: 96Mi
    limits:
      cpu: 100m
      memory: 256Mi
      
loki:
  deploymentMode: Distributed

  ingester:
    replicas: 3
  querier:
    replicas: 3
    maxUnavailable: 2
  queryFrontend:
    replicas: 2
    maxUnavailable: 1
  queryScheduler:
    replicas: 2
  distributor:
    replicas: 3
    maxUnavailable: 2
  compactor:
    replicas: 1
  indexGateway:
    replicas: 2
    maxUnavailable: 1

  # Optional experimental components
  bloomPlanner:
    replicas: 0
  bloomBuilder:
    replicas: 0
  bloomGateway:
    replicas: 0

  # Zero out replica counts of other deployment modes
  backend:
    replicas: 0
  read:
    replicas: 0
  write:
    replicas: 0
  singleBinary:
    replicas: 0

  image:
    registry: REP_ACR_NAME_REP.azurecr.io
    repository: loki
    tag: "3.1.0"
  schemaConfig:
    configs:
      - from: 2024-04-01
        object_store: azure
        store: tsdb
        schema: v13
        index:
          prefix: index_
          period: 24h
  storage:
    bucketNames:
      chunks: chunks
      ruler: ruler
    type: azure
    azure:
      accountKey: "REP_STORAGE_ACCOUNT_KEY_REP"
      accountName: REP_STORAGE_ACCOUNT_REP
      container: logs
      request_timeout: 0
  auth_enabled: false

gateway:
  enabled: true
  image:
    registry: REP_ACR_NAME_REP.azurecr.io
    repository: nginx
    tag: stable
  resources:
    requests:
      cpu: 10m
      memory: 16Mi
    limits:
      cpu: 50m
      memory: 32Mi
  nodeSelector:
    kubernetes.azure.com/mode: system

sidecar:
  image:
    registry: REP_ACR_NAME_REP.azurecr.io
    repository: REP_ACR_NAME_REP.azurecr.io/grafana-sidecar
    tag: 1.26.1
  dashboards:
    skipReload: true

resultsCache:
  enabled: false

chunksCache:
  enabled: false

# Keep log data up to 1 year
table_manager:
  retention_deletes_enabled: true
  retention_period: 365d

monitoring:
  selfMonitoring:
    enabled: false
    grafanaAgent:
      installOperator: false
  dashboards:
    enabled: false
  rules:
    enabled: false

test:
  enabled: false

lokiCanary:
  enabled: false
