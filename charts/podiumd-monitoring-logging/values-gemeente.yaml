kubePrometheusStack:
  grafana:
    additionalDataSources:
    - name: loki
      type: loki
      uid: loki
      readOnly: false
      editable: true
      access: proxy
      url: http://loki-stack-gateway.loki.svc.cluster.local
      jsonData:
          derivedFields:
            - datasourceUid: tempo
              matcherRegex: ((\d+|[a-z]+)(\d+|[a-z]+)(\d+|[a-z]+)(\d+|[a-z]+)(\d+|[a-z]+)(\d+|[a-z]+)(\d+|[a-z]+)(\d+|[a-z]+)(\d+|[a-z]+)(\d+|[a-z]+)(\d+|[a-z]+))
              name: TraceID
              url: $${__value.raw}
          maxLines: 1000
      version: 1
    - name: Tempo
      type: tempo
      readOnly: false
      editable: true
      uid: tempo
      url: http://tempo.loki.svc.cluster.local:3100
      access: proxy
      version: 1
      
    admin:
      existingSecret: ""
      passwordKey: admin-password
      userKey: admin-user
  #  adminPassword: test
  #  adminUser: test
    assertNoLeakedSecrets: false
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
        - name: 'default'
          orgId: 1
          folder: ''
          type: file
          updateIntervalSeconds: 10
          disableDeletion: false
          allowUiUpdates: true
          editable: true
          options:
            path: /var/lib/grafana/dashboards/default
    dashboards:
      default:
        Monitoring:
          url: https://raw.githubusercontent.com/Dimpact-Samenwerking/dashboard/main/Monitoring.json
          token: ''
          datasource: Prometheus
        Logging:
          url: https://raw.githubusercontent.com/Dimpact-Samenwerking/dashboard/main/Logging.json
          token: ''
          datasource: Prometheus
        Metrics:
          url: https://raw.githubusercontent.com/Dimpact-Samenwerking/dashboard/main/Metrics.json
          token: ''
          datasource: Prometheus
        Certificaten Cluster:
          url: https://raw.githubusercontent.com/Dimpact-Samenwerking/dashboard/main/Certificaten%20Cluster.json
          token: ''
          datasource: Prometheus
        Certificaten:
          url: https://raw.githubusercontent.com/Dimpact-Samenwerking/dashboard/main/Certificaten.json
          token: ''
          datasource: Prometheus
      
    smtp:
      existingSecret: smtp-secret
      passwordKey: password
      userKey: user
         
    grafana.ini:
      smtp:
        enabled: true
        from_address: noreply@dimpact.nl
        from_name: Grafana
        host: smtp-mail.outlook.com:587
        skip_verify: true
  
    persistence:
      enabled: true
      size: 10Gi
      type: pvc
      
  prometheus:
    prometheusSpec:
  #    # read all serviceMonitors from all namespaces
      serviceMonitorSelectorNilUsesHelmValues: false
  #    storageSpec:
  #      volumeClaimTemplate:
  #        spec:
  #          storageClassName: default
  #          accessModes: ["ReadWriteOnce"]
  #          resources:
  #            requests:
  #              storage: 10Gi
      
      additionalScrapeConfigs:
      - job_name: blackbox-dimpact
        metrics_path: /probe
        params:
          module:
          - http_2xx
        relabel_configs:
        - source_labels:
          - __address__
          target_label: __param_target
        - source_labels:
          - __param_target
          target_label: instance
        - replacement: prometheus-black-exporter-prometheus-blackbox-exporter:9115
          target_label: __address__
        static_configs:
        - labels:
            group: 
            subgroup: 
          targets:

x509CertificateExporter:
  prometheusServiceMonitor:
    extraLabels:
        release: "grafana"
  prometheusRules:
    extraLabels:
        release: "grafana"

loki:
  loki:
    commonConfig:
      replication_factor: 1
    storage:
      type: 'filesystem'
    auth_enabled: false
    schemaConfig:
      configs:
        - from: 2024-04-01
          store: tsdb
          object_store: filesystem
          schema: v13
          index:
            prefix: loki_index_
            period: 24h
    ingester:
      chunk_encoding: snappy
    tracing:
      enabled: true
    querier:
      # Default is 4, if you have enough memory and CPU you can increase, reduce if OOMing
      max_concurrent: 2
  
  #gateway:
  #  ingress:
  #    enabled: true
  #    hosts:
  #      - host: FIXME
  #        paths:
  #          - path: /
  #            pathType: Prefix
  
  deploymentMode: SingleBinary
  singleBinary:
    replicas: 1
  
  chunksCache:
    # default is 500MB, with limited memory keep this smaller
    writebackSizeLimit: 10MB
    
  # create prometheus operator monitoring resources  
  serviceMonitor:
    enabled: true
  
  # Zero out replica counts of other deployment modes
  backend:
    replicas: 0
  read:
    replicas: 0
  write:
    replicas: 0
  ingester:
    replicas: 0
  querier:
    replicas: 0
  queryFrontend:
    replicas: 0
  queryScheduler:
    replicas: 0
  distributor:
    replicas: 0
  compactor:
    replicas: 0
  indexGateway:
    replicas: 0
  bloomCompactor:
    replicas: 0
  bloomGateway:
    replicas: 0
  monitoring:
    serviceMonitor:
      enabled: true   
    
promtail:
  config:
    # publish data to loki
    clients:
      - url: http://loki-stack-gateway.loki.svc.cluster.local/loki/api/v1/push
        tenant_id: 1

opentelemetryCollector:
  mode: deployment
  image:
    repository: otel/opentelemetry-collector-k8s
  command:
    name: otelcol-k8s
    
helmExporter:
  serviceMonitor:
  # Specifies whether a ServiceMonitor should be created
  create: true
