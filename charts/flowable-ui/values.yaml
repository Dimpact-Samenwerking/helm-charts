database:
  datasourceDriverClassName: "org.postgresql.Driver"
  datasourceUrl: ""
  user: ""
  password: ""

replicaCount: 1

image:
  repository: flowable/flowable-ui
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

resources:
  requests:
    cpu: 10m
    memory: 900Mi

livenessProbe:
  httpGet:
    path: /flowable-ui/actuator/health
    port: http
    httpHeaders:
      - name: Authorization
        value: Basic:YWRtaW46YWRtaW4=
    initialDelaySeconds: 60
    timeoutSeconds: 10
    failureThreshold: 10
readinessProbe:
  httpGet:
    path: /flowable-ui/actuator/health
    port: http
    httpHeaders:
      - name: Authorization
        value: Basic:YWRtaW46YWRtaW4=
    initialDelaySeconds: 60
    timeoutSeconds: 5

autoscaling:
  enabled: false

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
